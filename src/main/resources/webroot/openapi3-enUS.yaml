openapi: 3.0.0
info:
  title: "Learn that computer"
  version: 3.0.0
paths:
  /api/course:
    get:
      operationId: searchComputateCourse
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchComputateCourseResponse'
    patch:
      operationId: patchComputateCourse
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHComputateCourseRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHComputateCourseResponse'
    post:
      operationId: postComputateCourse
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTComputateCourseRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTComputateCourseResponse'
  /api/course-import:
    put:
      operationId: putimportComputateCourse
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportComputateCourseRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportComputateCourseResponse'
  /api/course/{id}:
    get:
      operationId: getComputateCourse
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETComputateCourseResponse'
  /course/{id}:
    get:
      operationId: searchpageComputateCourseId
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateCourseResponse'
  /course:
    get:
      operationId: searchpageComputateCourse
      x-vertx-event-bus: computate.org-enUS-ComputateCourse
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - course
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateCourseResponse'
  /api/event:
    get:
      operationId: searchComputateEvent
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchComputateEventResponse'
    patch:
      operationId: patchComputateEvent
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHComputateEventRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHComputateEventResponse'
    post:
      operationId: postComputateEvent
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTComputateEventRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTComputateEventResponse'
  /api/event-import:
    put:
      operationId: putimportComputateEvent
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportComputateEventRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportComputateEventResponse'
  /api/event/{id}:
    get:
      operationId: getComputateEvent
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETComputateEventResponse'
  /event/{id}:
    get:
      operationId: searchpageComputateEventId
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateEventResponse'
  /event:
    get:
      operationId: searchpageComputateEvent
      x-vertx-event-bus: computate.org-enUS-ComputateEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Computate Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateEventResponse'
  /api/research:
    get:
      operationId: searchComputateResearch
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchComputateResearchResponse'
    patch:
      operationId: patchComputateResearch
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHComputateResearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHComputateResearchResponse'
    post:
      operationId: postComputateResearch
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTComputateResearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTComputateResearchResponse'
  /api/research-import:
    put:
      operationId: putimportComputateResearch
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportComputateResearchRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportComputateResearchResponse'
  /api/research/{id}:
    get:
      operationId: getComputateResearch
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETComputateResearchResponse'
  /research/{id}:
    get:
      operationId: searchpageComputateResearchId
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateResearchResponse'
  /research:
    get:
      operationId: searchpageComputateResearch
      x-vertx-event-bus: computate.org-enUS-ComputateResearch
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - research
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateResearchResponse'
  /api/website:
    get:
      operationId: searchComputateWebsite
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchComputateWebsiteResponse'
    patch:
      operationId: patchComputateWebsite
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHComputateWebsiteRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHComputateWebsiteResponse'
    post:
      operationId: postComputateWebsite
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTComputateWebsiteRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTComputateWebsiteResponse'
  /api/website-import:
    put:
      operationId: putimportComputateWebsite
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportComputateWebsiteRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportComputateWebsiteResponse'
  /api/website/{id}:
    get:
      operationId: getComputateWebsite
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETComputateWebsiteResponse'
  /website/{id}:
    get:
      operationId: searchpageComputateWebsiteId
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateWebsiteResponse'
  /website:
    get:
      operationId: searchpageComputateWebsite
      x-vertx-event-bus: computate.org-enUS-ComputateWebsite
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - website
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageComputateWebsiteResponse'
  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: computate.org-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteUserResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: computate.org-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteUserResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: computate.org-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteUserResponse'
  /api/user-import:
    put:
      operationId: putimportSiteUser
      x-vertx-event-bus: computate.org-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSiteUserResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: computate.org-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: computate.org-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: computate.org-enUS-openIdConnect-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: computate.org-enUS-openIdConnect-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string
components:
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://keycloak.apps-crc.testing/realms/COMPUTATE.ORG/.well-known/openid-configuration
  requestBodies:
    SearchComputateCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchComputateCourseResponse'
    PATCHComputateCourseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHComputateCourseRequest'
    PATCHComputateCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHComputateCourseResponse'
    POSTComputateCourseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTComputateCourseRequest'
    POSTComputateCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTComputateCourseResponse'
    PUTImportComputateCourseRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportComputateCourseRequest'
    PUTImportComputateCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportComputateCourseResponse'
    GETComputateCourseResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETComputateCourseResponse'
    SearchPageComputateCourseResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageComputateCourseResponse'
    SearchComputateEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchComputateEventResponse'
    PATCHComputateEventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHComputateEventRequest'
    PATCHComputateEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHComputateEventResponse'
    POSTComputateEventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTComputateEventRequest'
    POSTComputateEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTComputateEventResponse'
    PUTImportComputateEventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportComputateEventRequest'
    PUTImportComputateEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportComputateEventResponse'
    GETComputateEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETComputateEventResponse'
    SearchPageComputateEventResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageComputateEventResponse'
    SearchComputateResearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchComputateResearchResponse'
    PATCHComputateResearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHComputateResearchRequest'
    PATCHComputateResearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHComputateResearchResponse'
    POSTComputateResearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTComputateResearchRequest'
    POSTComputateResearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTComputateResearchResponse'
    PUTImportComputateResearchRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportComputateResearchRequest'
    PUTImportComputateResearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportComputateResearchResponse'
    GETComputateResearchResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETComputateResearchResponse'
    SearchPageComputateResearchResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageComputateResearchResponse'
    SearchComputateWebsiteResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchComputateWebsiteResponse'
    PATCHComputateWebsiteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHComputateWebsiteRequest'
    PATCHComputateWebsiteResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHComputateWebsiteResponse'
    POSTComputateWebsiteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTComputateWebsiteRequest'
    POSTComputateWebsiteResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTComputateWebsiteResponse'
    PUTImportComputateWebsiteRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportComputateWebsiteRequest'
    PUTImportComputateWebsiteResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportComputateWebsiteResponse'
    GETComputateWebsiteResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETComputateWebsiteResponse'
    SearchPageComputateWebsiteResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageComputateWebsiteResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    PUTImportSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserRequest'
    PUTImportSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
  schemas:
    SearchComputateCourseResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  courseName:
                    type: string
                  courseDescription:
                    type: string
    PATCHComputateCourseRequest:
      allOf:
        - type: object
          properties:
            setCourseName:
              type: string
              nullable: true
            removeCourseName:
              type: string
            removeAllCourseName:
              type: string
            setCourseDescription:
              type: string
              nullable: true
            removeCourseDescription:
              type: string
            removeAllCourseDescription:
              type: string
    PATCHComputateCourseResponse:
      allOf:
        - type: object
          properties:
            setCourseName:
              type: string
              nullable: true
            removeCourseName:
              type: string
            removeAllCourseName:
              type: string
            setCourseDescription:
              type: string
              nullable: true
            removeCourseDescription:
              type: string
            removeAllCourseDescription:
              type: string
    POSTComputateCourseRequest:
      allOf:
        - type: object
          properties:
            courseName:
              type: string
            courseDescription:
              type: string
    POSTComputateCourseResponse:
      allOf:
        - type: object
          properties:
            courseName:
              type: string
            courseDescription:
              type: string
    PUTImportComputateCourseRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  courseName:
                    type: string
                  courseDescription:
                    type: string
    PUTImportComputateCourseResponse:
      allOf:
        - type: object
          properties:
                  courseName:
                    type: string
                  courseDescription:
                    type: string
    GETComputateCourseResponse:
      allOf:
        - type: object
          properties:
            courseName:
              type: string
            courseDescription:
              type: string
    SearchPageComputateCourseResponse:
      allOf:
        - type: string
    SearchComputateEventResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  location:
                    type: object
                  locationColors:
                    type: array
                    items:
                      type: string
                  locationTitles:
                    type: array
                    items:
                      type: string
                  locationLinks:
                    type: array
                    items:
                      type: string
                  eventName:
                    type: string
    PATCHComputateEventRequest:
      allOf:
        - type: object
          properties:
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setLocationColors:
              type: array
              nullable: true
              items:
                type: string
            removeLocationColors:
              type: string
            removeAllLocationColors:
              type: array
              items:
                type: string
            addLocationColors:
              type: string
            addAllLocationColors:
              type: array
              items:
                type: string
            setLocationTitles:
              type: array
              nullable: true
              items:
                type: string
            removeLocationTitles:
              type: string
            removeAllLocationTitles:
              type: array
              items:
                type: string
            addLocationTitles:
              type: string
            addAllLocationTitles:
              type: array
              items:
                type: string
            setLocationLinks:
              type: array
              nullable: true
              items:
                type: string
            removeLocationLinks:
              type: string
            removeAllLocationLinks:
              type: array
              items:
                type: string
            addLocationLinks:
              type: string
            addAllLocationLinks:
              type: array
              items:
                type: string
            setEventName:
              type: string
              nullable: true
            removeEventName:
              type: string
            removeAllEventName:
              type: string
    PATCHComputateEventResponse:
      allOf:
        - type: object
          properties:
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
            setLocation:
              type: object
              nullable: true
            removeLocation:
              type: object
            removeAllLocation:
              type: object
            setLocationColors:
              type: array
              nullable: true
              items:
                type: string
            removeLocationColors:
              type: string
            removeAllLocationColors:
              type: array
              items:
                type: string
            addLocationColors:
              type: string
            addAllLocationColors:
              type: array
              items:
                type: string
            setLocationTitles:
              type: array
              nullable: true
              items:
                type: string
            removeLocationTitles:
              type: string
            removeAllLocationTitles:
              type: array
              items:
                type: string
            addLocationTitles:
              type: string
            addAllLocationTitles:
              type: array
              items:
                type: string
            setLocationLinks:
              type: array
              nullable: true
              items:
                type: string
            removeLocationLinks:
              type: string
            removeAllLocationLinks:
              type: array
              items:
                type: string
            addLocationLinks:
              type: string
            addAllLocationLinks:
              type: array
              items:
                type: string
            setEventName:
              type: string
              nullable: true
            removeEventName:
              type: string
            removeAllEventName:
              type: string
    POSTComputateEventRequest:
      allOf:
        - type: object
          properties:
            id:
              type: string
            location:
              type: object
            locationColors:
              type: array
              items:
                type: string
            locationTitles:
              type: array
              items:
                type: string
            locationLinks:
              type: array
              items:
                type: string
            eventName:
              type: string
    POSTComputateEventResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
            location:
              type: object
            locationColors:
              type: array
              items:
                type: string
            locationTitles:
              type: array
              items:
                type: string
            locationLinks:
              type: array
              items:
                type: string
            eventName:
              type: string
    PUTImportComputateEventRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  location:
                    type: object
                  locationColors:
                    type: array
                    items:
                      type: string
                  locationTitles:
                    type: array
                    items:
                      type: string
                  locationLinks:
                    type: array
                    items:
                      type: string
                  eventName:
                    type: string
    PUTImportComputateEventResponse:
      allOf:
        - type: object
          properties:
                  id:
                    type: string
                  location:
                    type: object
                  locationColors:
                    type: array
                    items:
                      type: string
                  locationTitles:
                    type: array
                    items:
                      type: string
                  locationLinks:
                    type: array
                    items:
                      type: string
                  eventName:
                    type: string
    GETComputateEventResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
            location:
              type: object
            locationColors:
              type: array
              items:
                type: string
            locationTitles:
              type: array
              items:
                type: string
            locationLinks:
              type: array
              items:
                type: string
            eventName:
              type: string
    SearchPageComputateEventResponse:
      allOf:
        - type: string
    SearchComputateResearchResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
    PATCHComputateResearchRequest:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
    PATCHComputateResearchResponse:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
    POSTComputateResearchRequest:
      allOf:
        - type: object
          properties:
            name:
              type: string
    POSTComputateResearchResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
    PUTImportComputateResearchRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
    PUTImportComputateResearchResponse:
      allOf:
        - type: object
          properties:
                  name:
                    type: string
    GETComputateResearchResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
    SearchPageComputateResearchResponse:
      allOf:
        - type: string
    SearchComputateWebsiteResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
    PATCHComputateWebsiteRequest:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
    PATCHComputateWebsiteResponse:
      allOf:
        - type: object
          properties:
            setName:
              type: string
              nullable: true
            removeName:
              type: string
            removeAllName:
              type: string
    POSTComputateWebsiteRequest:
      allOf:
        - type: object
          properties:
            name:
              type: string
    POSTComputateWebsiteResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
    PUTImportComputateWebsiteRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
    PUTImportComputateWebsiteResponse:
      allOf:
        - type: object
          properties:
                  name:
                    type: string
    GETComputateWebsiteResponse:
      allOf:
        - type: object
          properties:
            name:
              type: string
    SearchPageComputateWebsiteResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  userKeys:
                    type: array
                    items:
                      type: string
                  userId:
                    type: string
                  userName:
                    type: string
                  userEmail:
                    type: string
                  userFirstName:
                    type: string
                  userLastName:
                    type: string
                  userFullName:
                    type: string
                  seeArchived:
                    type: boolean
                  seeDeleted:
                    type: boolean
    PATCHSiteUserRequest:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserRequest:
      allOf:
        - type: object
          properties:
            list:
              type: array
              items:
                type: object
                properties:
                  userKeys:
                    type: array
                    items:
                      type: string
                  userId:
                    type: string
                  userName:
                    type: string
                  userEmail:
                    type: string
                  userFirstName:
                    type: string
                  userLastName:
                    type: string
                  userFullName:
                    type: string
                  seeArchived:
                    type: boolean
                  seeDeleted:
                    type: boolean
    PUTImportSiteUserResponse:
      allOf:
        - type: object
          properties:
                  userKeys:
                    type: array
                    items:
                      type: string
                  userId:
                    type: string
                  userName:
                    type: string
                  userEmail:
                    type: string
                  userFirstName:
                    type: string
                  userLastName:
                    type: string
                  userFullName:
                    type: string
                  seeArchived:
                    type: boolean
                  seeDeleted:
                    type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
