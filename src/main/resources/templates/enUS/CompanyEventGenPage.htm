{% extends "enUS/BaseModelPage.htm" %}

{%- block htmTitleBaseModelPage %}
{%- block htmTitleCompanyEventPage %}
    <title>{% if searchListCompanyEvent_ is defined %}{% if companyEventCount == int1 %}{% if id is defined %}event{% else %}event{% endif %}{% else %}no event found{% endif %}{% else %}events{% endif %}</title>
{%- endblock htmTitleCompanyEventPage %}
{%- endblock htmTitleBaseModelPage %}

{%- block htmStylesBaseModelPage %}
{{ super() }}
{%- block htmStylesCompanyEventPage %}
{%- endblock htmStylesCompanyEventPage %}
{%- endblock htmStylesBaseModelPage %}

{%- block htmStyleBaseModelPage %}
{{ super() }}
{%- block htmStyleCompanyEventPage %}
{%- endblock htmStyleCompanyEventPage %}
{%- endblock htmStyleBaseModelPage %}

{%- block htmScriptsBaseModelPage %}
{{ super() }}
{%- block htmScriptsCompanyEventPage %}
    <script src="{{staticBaseUrl}}/js/enUS/CompanyEventPage.js"></script>
{%- endblock htmScriptsCompanyEventPage %}
{%- endblock htmScriptsBaseModelPage %}

{%- block htmScriptBaseModelPage %}
{%- block htmScriptCompanyEventPage %}
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { lat: {{ DEFAULT_MAP_LOCATION.lat }}, lon: {{ DEFAULT_MAP_LOCATION.lon }} };
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('sl-button')
        , customElements.whenDefined('sl-input')
      ]).then(() => {

        document.onkeydown = function(evt) {
          evt = evt || window.event;
          var isEscape = false;
          if ('key' in evt) {
            isEscape = (evt.key === 'Escape' || evt.key === 'Esc');
          } else {
            isEscape = (evt.keyCode === 27);
          }
          if (isEscape) {
            document.querySelector('.w3-modal:visible').classList.add('display-none');
          }
        };
        window.eventBus = new EventBus('/eventbus');
        var pk = {% if pk is defined %}{{pk}}{% else %}null{% endif %};

        if(pk == null) {
          document.querySelector('#grid-toggle-details').addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list').addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card').addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          window.companyEvent = JSON.parse(document.querySelector('.pageForm .companyEvent')?.value);
        {% if pk is defined %}
          // PATCH created
          document.querySelector('#Page_created')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_created');
            const valid = form.checkValidity();
            if(valid) {
              var timeZone = event.currentTarget.value.split('[').pop().split(']')[0];
              var t1 = moment(event.currentTarget.value.split('[')[0].trim(), 'MM/DD/YYYY h:mm a');
              var t2 = moment.tz(event.currentTarget.value.split('[')[0].trim(), 'MM/DD/YYYY h:mm a', timeZone);
              var t3 = new Date(t1._d);
              t3.setTime(t1.toDate().getTime() + t2.toDate().getTime() - t1.toDate().getTime());
              var t = moment(t3);
              if(t) {
                var s = t.tz(timeZone).format('YYYY-MM-DDTHH:mm:ss.000') + '[' + timeZone + ']';
                patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                    , 'setCreated', s)
                    , event.currentTarget
                    , function(response, target) { addGlow(target); }
                    , function(response, target) { addError(target); }
                    );
              }
            }
          });
          document.querySelector('#Page_created')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_created')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_created');
            const valid = form.reportValidity();
          });
          // PATCH archived
          document.querySelector('#Page_archived')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_archived');
            const valid = form.checkValidity();
            if(valid) {
              var confirmResponse = confirm('Are you sure you want to archive that?'); 
              if(confirmResponse) { 
                patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                    , 'setArchived', event.currentTarget.checked
                    , event.currentTarget
                    , function(response, target) { addGlow(target); }
                    , function(response, target) { addError(target); }
                    );
              }
            }
          });
          document.querySelector('#Page_archived')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_archived')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_archived');
            const valid = form.reportValidity();
          });
          // PATCH deleted
          document.querySelector('#Page_deleted')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_deleted');
            const valid = form.checkValidity();
            if(valid) {
              var confirmResponse = confirm('Are you sure you want to delete that?'); 
              if(confirmResponse) { 
                patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                    , 'setDeleted', event.currentTarget.checked
                    , event.currentTarget
                    , function(response, target) { addGlow(target); }
                    , function(response, target) { addError(target); }
                    );
              }
            }
          });
          document.querySelector('#Page_deleted')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_deleted')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_deleted');
            const valid = form.reportValidity();
          });
          // PATCH location
          document.querySelector('#Page_location')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_location');
            const valid = form.checkValidity();
            if(valid) {
              patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                  , 'setLocation', event.currentTarget.value == '' ? null : JSON.parse(event.currentTarget.value)
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_location')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_location')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_location');
            const valid = form.reportValidity();
          });
          // PATCH eventName
          document.querySelector('#Page_eventName')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_eventName');
            const valid = form.checkValidity();
            if(valid) {
              patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                  , 'setEventName', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_eventName')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_eventName')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_eventName');
            const valid = form.reportValidity();
          });
          // PATCH inheritPk
          document.querySelector('#Page_inheritPk')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_inheritPk');
            const valid = form.checkValidity();
            if(valid) {
              patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                  , 'setInheritPk', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_inheritPk')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_inheritPk')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_inheritPk');
            const valid = form.reportValidity();
          });
          // PATCH sessionId
          document.querySelector('#Page_sessionId')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_sessionId');
            const valid = form.checkValidity();
            if(valid) {
              patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                  , 'setSessionId', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_sessionId')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_sessionId')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_sessionId');
            const valid = form.reportValidity();
          });
          // PATCH userKey
          document.querySelector('#Page_userKey')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_userKey');
            const valid = form.checkValidity();
            if(valid) {
              patchCompanyEventVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'pk:' + event.currentTarget.getAttribute('data-pk') }]
                  , 'setUserKey', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_userKey')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_userKey')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_userKey');
            const valid = form.reportValidity();
          });
        {% endif %}
        }
        window.listCompanyEvent = JSON.parse(document.querySelector('.pageForm .listCompanyEvent')?.value);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphCompanyEvent();

        {%- block websocketCompanyEventPage %}{%- endblock %}
        document.querySelector('#htmForm_patchCompanyEvent')?.addEventListener('submit', event => {
          event.preventDefault();
          patchCompanyEvent(null, document.querySelector('#htmForm_patchCompanyEvent'));
        });
        document.querySelector('#htmForm_postCompanyEvent')?.addEventListener('submit', event => {
          event.preventDefault();
          postCompanyEvent(document.querySelector('#htmForm_postCompanyEvent'));
        });
        document.querySelector('#htmForm_putimportCompanyEvent')?.addEventListener('submit', event => {
          event.preventDefault();
          putimportCompanyEvent(document.querySelector('#htmForm_putimportCompanyEvent'));
        });
        document.querySelector('#htmForm_searchpageCompanyEvent')?.addEventListener('submit', event => {
          event.preventDefault();
          searchpageCompanyEvent();
        });
      });
    </script>
    <script>

      function jsWebsocketCompanyEvent(pk, vars, $response) {
        {%- block jsWebsocketCompanyEventPage %}{%- endblock %}
      }

      function jsTooltipCompanyEvent(e, feature) {
        {%- block jsTooltipCompanyEventPage %}{%- endblock %}
      }

      function htmTooltipCompanyEvent(feature, layer) {
        return `{%- block htmTooltipCompanyEventPage %}
<h3><i class="{{ classIconCssClasses }}  "></i><a href="${quoteattr(feature.properties.pageUrlPk)}">${feature.properties.objectTitle}</a></h3>
{%- endblock htmTooltipCompanyEventPage %}`;
      }

      function jsLegendCompanyEvent(map) {
{%- block jsLegendCompanyEventPage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listCompanyEvent.forEach((companyEvent, index) => {
          if(companyEvent.location) {
            var shapes = [];
            if(Array.isArray(companyEvent.location))
              shapes = shapes.concat(companyEvent.location);
            else
              shapes.push(companyEvent.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendCompanyEvent(map, shape, companyEvent, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendCompanyEventPage %}
      }

      function htmLegendCompanyEvent(map, shape, companyEvent, index, count) {
        var color = companyEvent.locationColors[index];
        var title = companyEvent.locationTitles[index];
        var url = companyEvent.locationLinks[index];
        var htm = '';
        htm += `<div class="w3-white w3-padding w3-border w3-opacity w3-hover-opacity-off cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendCompanyEventPage %}
    <div class="w3-row " title="${quoteattr(title)}">
    <div class="w3-col " style="width: 20px; ">
      <i class="fa-light fa-circle" style="color: ${color}; "></i>
    </div>
    <div class="w3-rest text-overflow-ellipsis ">
      <span class="" data-id="${companyEvent.id}" onclick="window.mapLayers[this.getAttribute('data-id')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendCompanyEventPage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleCompanyEvent(feature) {
{%- block jsStyleCompanyEventPage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleCompanyEventPage %}
      }
    </script>
{%- endblock htmScriptCompanyEventPage %}
{%- endblock htmScriptBaseModelPage %}

{%- block websocketBaseModelPage %}
{{ super() }}
{%- block websocketCompanyEventPage %}
        websocketCompanyEvent(websocketCompanyEventInner);
{%- endblock websocketCompanyEventPage %}
{%- endblock websocketBaseModelPage %}

{%- block htmUrlCompanyEventPage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlCompanyEventPage %}

{%- macro htmButton_patchCompanyEvent() %}
        <sl-button
            onclick="document.querySelector('#patchCompanyEventDialog').show(); "
            >
          <i class="fas fa-edit "></i>
          Modify event
        </sl-button>
{%- endmacro %}

{%- macro htmFormButton_patchCompanyEvent() %}
            <sl-button type="submit" variant="primary">Modify event</sl-button>
{%- endmacro %}

{%- macro htmForm_patchCompanyEvent() %}
        <sl-dialog id="patchCompanyEventDialog" label="Modify event">
          <form id="htmForm_patchCompanyEvent">

              {% if "PATCH" in scopes %}
                {{ htmCreatedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmCreatedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmCreatedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmArchivedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmArchivedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmArchivedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmDeletedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmDeletedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmDeletedCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmLocationCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmLocationCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmLocationCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmEventNameCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmEventNameCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmEventNameCompanyEventPage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}
            {{ htmFormButton_patchCompanyEvent() }}
          </form>
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_postCompanyEvent() %}
        <sl-button
            onclick="document.querySelector('#postCompanyEventDialog').show(); "
            >
          <i class="fas fa-file-plus "></i>
          Create an event
        </sl-button>
{%- endmacro %}

{%- macro htmFormButton_postCompanyEvent() %}
            <sl-button type="submit" variant="primary">Create an event</sl-button>
{%- endmacro %}

{%- macro htmForm_postCompanyEvent() %}
        <sl-dialog id="postCompanyEventDialog" label="Create an event">
          <form id="htmForm_postCompanyEvent">
            <div class="">You can override any default values below: </div>

              {% if "PATCH" in scopes %}
                {{ htmLocationCompanyEventPage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmLocationCompanyEventPage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmLocationCompanyEventPage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmEventNameCompanyEventPage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmEventNameCompanyEventPage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmEventNameCompanyEventPage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}
            {{ htmFormButton_postCompanyEvent() }}
          </form>
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_putimportCompanyEvent() %}
        <sl-button
            onclick="document.querySelector('#putimportCompanyEventDialog').show(); "
            >
          <i class="fas fa-file-import "></i>
          Import events
        </sl-button>
{%- endmacro %}

{%- macro htmFormButton_putimportCompanyEvent() %}
            <sl-button type="submit" variant="primary">Import events</sl-button>
{%- endmacro %}

{%- macro htmForm_putimportCompanyEvent() %}
        <sl-dialog id="putimportCompanyEventDialog" label="Import events">
          <form id="htmForm_putimportCompanyEvent">
            <div class="w3-cell-row ">
              <sl-textarea
                  class="PUTImport_searchList w3-input w3-border "
                  style="height: 300px; "
                  placeholder="{ 'searchList': [ { 'pk': ... , 'saves': [ ... ] }, ... ] }"
                  >
              </sl-textarea>
            </div>
            {{ htmFormButton_putimportCompanyEvent() }}
          </form>
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_searchpageCompanyEvent() %}
{%- endmacro %}

{%- macro htmFormButton_searchpageCompanyEvent() %}
            <sl-button type="submit" variant="primary">Search events</sl-button>
{%- endmacro %}

{%- macro htmForm_searchpageCompanyEvent() %}
        <div id="searchpageCompanyEventDialog" label="Search events">
          <div id="htmForm_searchpageCompanyEvent">

              {% if "PATCH" in scopes %}
                {{ htmPkCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmPkCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPkCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmObjectIdCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmObjectIdCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmObjectIdCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmCreatedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmCreatedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmCreatedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmModifiedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmModifiedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmModifiedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmArchivedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmArchivedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmArchivedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmDeletedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmDeletedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmDeletedCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmLocationCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmLocationCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmLocationCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmEventNameCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" scopes %}
                  {{ htmEventNameCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmEventNameCompanyEventPage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}
            {{ htmFormButton_searchpageCompanyEvent() }}
          </div>
        </div>
{%- endmacro %}
            {%- macro htmBodyAllCompanyEventPage() %}
            <h1>
              <a href="{{pageUri}}" class="w3-bar-item w3-btn w3-center w3-block w3- w3-hover-">
                {% if classIconCssClasses is defined %}
                  <i class="{{ classIconCssClasses }} site-menu-icon "></i>
                {% endif %}
                <span class="">events</span>
              </a>
            </h1>
            {{ htmSearchButtonsCompanyEventPage() }}
            <div id="site-calendar-box">
              <div id="site-calendar"><!-- // --></div>
            </div>
              {{ htmPaginationButtonsCompanyEventPage() }}
            <div class="grid-mode-details" id="site-results-grid">
            <div>
                <i class="fad fa-map-location-dot site-result-icon "></i>
              <sl-dropdown>
                <sl-button slot="trigger" caret>created</sl-button>
                <sl-menu>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-a-z"></i>
                    sort by created ascending
                  </sl-menu-item>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-z-a"></i>
                    sort by created descending
                  </sl-menu-item>
                </sl-menu>
              </sl-dropdown>
              <sl-dropdown>
                <sl-button slot="trigger" caret></sl-button>
                <sl-menu>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-a-z"></i>
                    sort by null ascending
                  </sl-menu-item>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-z-a"></i>
                    sort by null descending
                  </sl-menu-item>
                </sl-menu>
              </sl-dropdown>
              </div>
              {% for item in listCompanyEvent%}
              <a href="{{ item.pageUrlPk }}">
                <i class="fad fa-map-location-dot site-result-icon "></i>
                <div><sl-format-date weekday="short" month="short" day="numeric" year="numeric" hour="numeric" minute="numeric" second="numeric" time-zone-name="short" date="{{ formatZonedDateTime(item.created, "yyyy-MM-dd'T'HH:mm:ss.SSSX", defaultLocaleId, "UTC") }}"></sl-format-date></div>
                <div>{{ item.objectTitle }}</div>
              </a>
              {% endfor %}
                      {% if getColumnCreated is defined %}
                        <div>
                        </div>
                      {% endif %}
                      {% if getColumnObjectTitle is defined %}
                        <div>
                        </div>
                      {% endif %}
            </div>
            {%- endmacro htmBodyAllCompanyEventPage() %}
{%- macro htmSearchButtonsCompanyEventPage() %}
        <sl-button-group id="htmSearchButtons">
          <sl-tooltip placement="top" content="Advanced search for events">
            <sl-button onclick="document.querySelector('#siteSidebarToggleSearch').show(); ">
              <i slot="prefix" class="fad fa-magnifying-glass hover-box-shadow w3-xlarge "></i> 
              Search
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Filters and facet counts for events">
            <sl-button onclick="document.querySelector('#siteSidebarToggleFilters').show(); ">
              <i slot="prefix" class="fad fa-filters hover-box-shadow w3-xlarge "></i> 
              Filters
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for events">
            <sl-button onclick="document.querySelector('#siteSidebarToggleRange').show(); ">
              <i slot="prefix" class="fad fa-calendar-range hover-box-shadow w3-xlarge "></i> 
              Range
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for events">
            <sl-button onclick="document.querySelector('#siteSidebarTogglePivot').show(); ">
              <i slot="prefix" class="fad fa-table-pivot hover-box-shadow w3-xlarge "></i> 
              Pivot
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for events">
            <sl-button onclick="document.querySelector('#siteSidebarToggleFieldList').show(); ">
              <i slot="prefix" class="fad fa-list-ul hover-box-shadow w3-xlarge "></i> 
              FieldList
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for events">
            <sl-button onclick="document.querySelector('#siteSidebarToggleStats').show(); ">
              <i slot="prefix" class="fad fa-chart-candlestick hover-box-shadow w3-xlarge "></i> 
              Stats
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Query the JSON REST API for events">
            <sl-button onclick="document.querySelector('#siteSidebarToggleApi').show(); "
                 href="{{ apiUri }}{% if pk is defined %}/{{ pk }}{% else %}{% if id is defined %}/{{ id }}{% else %}{{ queryStr }}{% endif %}{% endif %}"
                >
              <i slot="prefix" class="fad fa-brackets-curly hover-box-shadow w3-xlarge "></i> 
              Api
            </sl-button>
          </sl-tooltip>
        </sl-button-group>
{%- endmacro htmSearchButtonsCompanyEventPage() %}

{%- macro htmPaginationButtonsCompanyEventPage() %}
            <div id="htmPaginationButtons">
              <sl-button-group id="htmPaginationButtons">
                <sl-tooltip placement="top" content="Show the previous results">
                  <sl-button{% if pagination.pagePrevious is defined %} href="{{pageUri}}?start={{pagination.pagePrevious.start}}&amp;rows={{pagination.rows}}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-arrow-square-left "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show half the results">
                  <sl-button{% if pagination.rowsPrevious >= pagination['1L'] %} href="{{pageUri}}?start={{pagination.start}}&amp;rows={{ pagination.rowsPrevious }}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-minus-square "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show double the results">
                  <sl-button href="{{pageUri}}?start={{pagination.start}}&amp;rows={{ pagination.rowsNext }}">
                    <i slot="prefix" class="fas fa-plus-square "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the next results">
                  <sl-button{% if pagination.pageNext is defined %} href="{{pageUri}}?start={{pagination.pageNext.start}}&amp;rows={{pagination.rows}}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-arrow-square-right "></i>
                  </sl-button>
                </sl-tooltip>
                <div>{{ pagination.startNum }} - {{ pagination.endNum }} of {{ pagination.foundNum }}</div>
              </sl-button-group>
              <sl-divider vertical></sl-divider>
              <sl-button-group>
                <sl-tooltip placement="top" content="Show the results as details">
                  <sl-button id="grid-toggle-details">
                    <i class="fa-solid fa-list"></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the results as a list">
                  <sl-button id="grid-toggle-list">
                    <i class="fa-solid fa-bars"></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the results as cards">
                  <sl-button id="grid-toggle-card">
                    <i class="fa-solid fa-grid"></i>
                  </sl-button>
                </sl-tooltip>
              </sl-button-group>
            </div>
{%- endmacro htmPaginationButtonsCompanyEventPage() %}

    {%- block htmBodyStartBaseModelPage %}
    {{ super() }}
    {%- block htmBodyStartCompanyEventPage %}
    {%- endblock htmBodyStartCompanyEventPage %}
    {%- endblock htmBodyStartBaseModelPage %}

    {%- block htmBodyMiddleBaseModelPage %}
    {%- block htmBodyMiddleCompanyEventPage %}
        <div class="htmBodySidebarCompanyEventPage ">
          {%- block htmBodySidebarCompanyEventPage %}
          <sl-drawer placement="end" id="siteSidebarToggleSearch">
            <div class="w3-bar w3- ">
              <span class="w3-bar-item ">
              <i class="fad fa-magnifying-glass "></i> Search</span>
            </div>
            <div class="w3-bar-block ">
{%- block htmBodySearchCompanyEventPage %}
              <div>
                {% for key, value in varsQ.items() %}
                  <div class="w3-cell-row ">
                    <div class="w3-cell w3-cell-top ">
                      <label for="qCompanyEvent_{{ key }}">{{ displayName }}<sup class="w3-tiny "> ({{ classSimpleName }})</sup></label>
                    </div>
                  </div>
                  <div class="w3-cell-row ">
                    <div class="w3-cell w3-cell-top ">
                      <sl-input id="qCompanyEvent_{{ key }}" placeholder="{{ displayName }}" class="" {% if var == 'objectSuggest' %}onkeyup{% else %}onchange{% endif %}="qChange('CompanyEvent', value); " data-var="{{ var }}" autocomplete="off="></sl-input>
                      <div class="pageSearchVal w3-tiny "></div>
                    </div>
                  </div>
                {% endfor %}
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <label for="qCompanyEvent_Start">start<sup class="w3-tiny "> (Long)</sup></label>
                  </div>
                </div>
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <sl-input id="qCompanyEvent_start" placeholder="{{ displayName }}" class="" onchange="paramChange('CompanyEvent', this); " data-var="start" autocomplete="off=" value="{{ start }}"></sl-input>
                    <div class="pageSearchVal w3-tiny ">start={{ start }}</div>
                  </div>
                </div>
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <label for="qCompanyEvent_Rows">rows<sup class="w3-tiny "> (Long)</sup></label>
                  </div>
                </div>
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <sl-input id="qCompanyEvent_rows" placeholder="{{ displayName }}" class="" onchange="paramChange('CompanyEvent', this); " data-var="rows" autocomplete="off" value="{{ rows }}"></sl-input>
                    <div class="pageSearchVal w3-tiny ">rows={{ rows }}</div>
                  </div>
                </div>
              </div>
              {%- endblock htmBodySearchCompanyEventPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleFilters">
            <div class="w3-bar w3- ">
              <span class="w3-bar-item ">
              <i class="fad fa-filters "></i> Filters</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyFiltersCompanyEventPage %}
              <div>
                {% for key, value in varsFq.items() %}
                  <div class="">
                    <label for="fqCompanyEvent_{{ key }}">{{ displayName }}<sup class="w3-tiny "> ({{ classSimpleName }})</sup></label>
                    <div class="w3-cell-row ">
                      <div class="w3-cell w3-cell-top ">
                        <button id="buttonFacetCompanyEvent_{{ key }}" class="" onclick="facetFieldChange('CompanyEvent', value); " title="see values " data-var="{{ var }}" data-clear="{% if facetField is defined %}true{% else %}false{% endif %}"><i class="fas fa-list "></i></button>
                      </div>
                      <div class="w3-cell w3-cell-top ">
                        <sl-input id="fqCompanyEvent_{{ key }}" placeholder="{{ displayName }}" class="" onchange="fqChange('CompanyEvent', value); " data-var="{{ var }}" autocomplete="off=" value="{{ val }}"></sl-input>
                      </div>
                    </div>
                  </div>
                  <div class="w3-tiny ">
                    <div class="pageSearchVal " id="pageSearchVal-fqCompanyEvent_{{ key }}">{% if val is defined %}fq={{ var }}:{{ val | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-buttonFacetCompanyEvent_{{ key }}">{% if facetField.var is defined %}facet.field={{ facetField.var }}{% endif %}</div>
                    <ol class="pageFacetField w3-small pageFacetFieldCompanyEvent_{{ key }} " id="pageFacetFieldCompanyEvent_{{ key }}">
{% for item in facetField.counts %}
                      <li class="cursor-pointer " data-class="CompanyEvent" data-var="{{ item.var }}" data-val="{{ item.key }}" onclick="fqReplace('CompanyEvent', item.value); ">{{ item.key }}: {{ item.value }}</li>
{% endfor %}
                    </ol>
                  </div>
                {% endfor %}
              </div>
              {%- endblock htmBodyFiltersCompanyEventPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleRange">
            <div class="w3-bar w3-  ">
              <span class="w3-bar-item ">
              <i class="fad fa-calendar-range "></i> Range</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyRangeCompanyEventPage %}
              <table class="w3-padding ">
                <tr>
                  <td class="w3-padding w3-tiny " colspan="2">
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeGap-CompanyEvent">{% if rangeGap is defined %}facet.range.gap={{ rangeGap | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeStart-CompanyEvent">{% if rangeStart is defined %}facet.range.start={{ rangeStart | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeEnd-CompanyEvent">{% if rangeEnd is defined %}facet.range.end={{ rangeEnd | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeVar-CompanyEvent">{% if defaultRangeVar is defined %}facet.range={!tag=r1}{{ defaultRangeVar | urlencode() }}{% endif %}</div>
                  </td>
                </tr>
              </table>
              <table class="w3-padding ">
                <tr class="">
                  <td class="">
                    <span>Range Gap</span>
                  </td>
                  <td class="">
                    <sl-select name="facet.range.gap" id="pageFacetRangeGap-CompanyEvent" onchange="facetRangeGapChange('CompanyEvent', this); ">
                      <sl-option value="+1YEAR"{% if defaultRangeGap == '+1YEAR' %} selected="selected"{% else %}{% endif %}>Year</sl-option>
                      <sl-option value="+1MONTH"{% if defaultRangeGap == '+1MONTH' %} selected="selected"{% else %}{% endif %}>Month</sl-option>
                      <sl-option value="+1WEEK"{% if defaultRangeGap == '+1WEEK' %} selected="selected"{% else %}{% endif %}>Week</sl-option>
                      <sl-option value="+1DAY"{% if defaultRangeGap == '+1DAY' %} selected="selected"{% else %}{% if defaultRangeGap is defined %}{% else %} selected="selected"{% endif %}{% endif %}>Day</sl-option>
                      <sl-option value="+1HOUR"{% if defaultRangeGap == '+1HOUR' %} selected="selected"{% else %}{% endif %}>Hour</sl-option>
                      <sl-option value="+1MINUTE"{% if defaultRangeGap == '+1MINUTE' %} selected="selected"{% else %}{% endif %}>Minute</sl-option>
                      <sl-option value="+1SECOND"{% if defaultRangeGap == '+1SECOND' %} selected="selected"{% else %}{% endif %}>Second</sl-option>
                    </sl-select>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span>Range Start</span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span><sl-input type="datetime-local" name="facetRangeStart" id="pageFacetRangeStart-CompanyEvent" value="{{ formatZonedDateTime(defaultRangeStart, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) }}" onclick="facetRangeStartChange('CompanyEvent', this); "></sl-input></span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span>Range End</span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span><sl-input type="datetime-local" name="facetRangeEnd" id="pageFacetRangeEnd-CompanyEvent" value="{{ formatZonedDateTime(defaultRangeEnd, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) }}" onclick="facetRangeEndChange('CompanyEvent', this); "></sl-input></span>
                  </td>
                </tr>
              </table>
              <table class="w3-padding ">
                {% for key, value in varsRange.items() %}
                  <tr class="">
                    <td class="">
                      <span><sl-radio-group name="pageFacetRange" class="pageFacetRange " id="pageFacetRangeCompanyEvent_{{ key }}" value="{{ var }}"{% if defaultRangeVar == var %} checked="checked"{% endif %} onclick="facetRangeChange('CompanyEvent', value); "></sl-radio-group></span>
                    </td>
                    <td class="">
                      <label for="pageFacetRangeCompanyEvent_{{ key }}">{{ displayName }}</label>
                    </td>
                  </tr>
                {% endfor %}
              </table>
              {%- endblock htmBodyRangeCompanyEventPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarTogglePivot">
            <div class="w3-bar w3- ">
              <span class="w3-bar-item ">
              <i class="fad fa-table-pivot "></i> Pivot</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyPivotCompanyEventPage %}
              <div style="display: none; " class="w3-padding w3-tiny " id="pageSearchVal-PivotCompanyEventHidden">
                {% for item in defaultPivotVars %}
                  <div class="pageSearchVal-PivotCompanyEventHidden " id="pageSearchVal-PivotCompanyEventHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div class="w3-padding w3-tiny " id="pageSearchVal-PivotCompanyEvent">
                {% if defaultPivotVars is defined %}
                  <div class="pageSearchVal pageSearchVal-PivotCompanyEvent " id="pageSearchVal-PivotCompanyEvent_1">facet.pivot={!range=r1}{% for item in defaultPivotVars %}{% if loop.index > 0 %},{% endif %}{{ item }}{% endfor %}</div>
                {% endif %}
              </div>
              <table class="w3-table ">
                {% for key, value in varsFq.items() %}
                  <tr class="">
                    <td class="">
                      <span><sl-checkbox name="pageFacetPivot" class="pageFacetPivot " id="pageFacetPivotCompanyEvent_{{ key }}" value="{{ var }}"{% if pivot is defined %} checked="checked"{% endif %} onclick="facetPivotChange('CompanyEvent', value); ">{{ displayName }}</sl-checkbox></span>
                    </td>
                    <td class="w3-cell ">
                      <label for="pageFacetPivotCompanyEvent_{{ key }}">{{ displayName }}</label>
                    </td>
                  </tr>
                {% endfor %}
              </table>
              {%- endblock htmBodyPivotCompanyEventPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleFieldList">
            <div class="w3-bar w3- ">
              <span class="w3-bar-item ">
              <i class="fad fa-list-ul "></i> Field List</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyFieldListCompanyEventPage %}
              <div
 style="display: none; " class="w3-padding w3-tiny " id="pageSearchVal-FieldListCompanyEventHidden">
                {% for item in defaultFieldListVars %}
                  <div class="pageSearchVal-FieldListCompanyEventHidden " id="pageSearchVal-FieldListCompanyEventHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div class="w3-padding w3-tiny " id="pageSearchVal-FieldListCompanyEvent">
                {% if defaultFieldListVars is defined %}
                  <div class="pageSearchVal pageSearchVal-FieldListCompanyEvent " id="pageSearchVal-FieldListCompanyEvent_1">fl={% for item in defaultFieldListVars %}{% if loop.index > 0 %},{% endif %}{{ this }}{% endfor %}</div>
                {% endif %}
              </div>
              <table class="w3-table ">
                {% for key, value in varsFq.items() %}
                  <tr class="">
                    <td class="">
                      <span><sl-checkbox name="pageFieldList" class="pageFieldList " id="pageFieldListCompanyEvent_{{ key }}" value="{{ var }}"{% if fieldList is defined %} checked="checked"{% endif %} onclick="facetFieldListChange('CompanyEvent', value); ">{{ displayName }}</sl-checkbox></span>
                    </td>
                    <td class="w3-cell ">
                      <label for="pageFieldListCompanyEvent_{{ key }}">{{ displayName }}</label>
                    </td>
                  </tr>
                {% endfor %}
              </table>
              {%- endblock htmBodyFieldListCompanyEventPage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleStats">
            <div class="w3-bar w3- ">
              <span class="w3-bar-item ">
                <i class="fad fa-chart-candlestick "></i>                 Stats</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyStatsCompanyEventPage %}
              <div
 style="display: none; " class="w3-padding w3-tiny " id="pageSearchVal-StatsCompanyEventHidden">
                {% for item in defaultStatsVars %}
                  <div class="pageSearchVal-StatsCompanyEventHidden " id="pageSearchVal-StatsCompanyEventHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div class="w3-padding w3-tiny " id="pageSearchVal-StatsCompanyEvent">
                {% if defaultStatsVars is defined %}
                  {% for item in defaultStatsVars %}
                    <div class="pageSearchVal pageSearchVal-StatsCompanyEvent_{{ item }} " id="pageSearchVal-StatsCompanyEvent_{{ item }}">stats.field={{ item }}                    </div>
                  {% endfor %}
                {% endif %}
              </div>
              <table class="w3-table ">
                {% for key, value in varsFq.items() %}
                  {% if enableStats is defined %}
                    <tr class="">
                      <td class="">
                        <span><sl-checkbox name="pageStats" class="pageStats " id="pageStatsCompanyEvent_{{ key }}" value="{{ var }}"{% if value.stats is defined %} checked="checked"{% endif %} onclick="facetStatsChange('CompanyEvent', value); ">{{ displayName }}</sl-checkbox></span>
                      </td>
                      <td class="w3-cell ">
                        <div>
                          <label for="pageStatsCompanyEvent_{{ key }}">{{ displayName }}</label>
                        </div>
                        <div class="pageStatsField w3-small pageStatsFieldCompanyEvent_{{ key }} " id="pageStatsFieldCompanyEvent_{{ key }}">
                          {% if value.stats is defined %}
                            {% for item in value.stats %}
                              {% if item.key == 'name' %}{% else %}
                                <div data-class="CompanyEvent" data-var="{{ item.var }}" data-val="{{ item.key }}">{{ item.key }}: {{ item }}</div>
                              {% endif %}
                            {% endfor %}
                            {% if value.stats.max is defined %}
                              <div>
                                <span> step </span>
                                <sl-input id="animateStatsStep" placeholder="step" value="1" style="width: 4em; "></sl-input>
                                <span> min </span>
                                <sl-input id="animateStatsMin" placeholder="min" value="{{ value.stats.min }}" style="width: 4em; "></sl-input>
                                <span> max </span>
                                <sl-input id="animateStatsMax" placeholder="max" value="{{ value.stats.max }}" style="width: 4em; "></sl-input>
                                <span> speed in seconds </span>
                                <sl-input id="animateStatsSpeed" placeholder="speed" value="1" style="width: 4em; "></sl-input>
                                <button onclick="animateStats(); ">animate</button>
                              </div>
                            {% endif %}
                          {% endif %}
                        </div>
                      </td>
                    </tr>
                  {% endif %}
                {% endfor %}
              </table>
            {%- endblock htmBodyStatsCompanyEventPage %}
            </div>
          </sl-drawer>
          {%- endblock htmBodySidebarCompanyEventPage %}
        </div>

        {%- block htmBodyGraphLocationCompanyEventPage %}
        <div id="htmBodyGraphLocationCompanyEventPage" class="w3-content htmBodyGraphLocation "></div>
        {%- endblock htmBodyGraphLocationCompanyEventPage %}

        {%- block htmBodyGraphCompanyEventPage %}
        <div id="htmBodyGraphBaseModelPage" class="w3-content htmBodyGraph "></div>
        {%- endblock htmBodyGraphCompanyEventPage %}
        <div class="pageContent ">
          <div id="site-calendar-box">
            <div id="site-calendar"><!-- // --></div>
          </div>
        </div>
{% if companyEventCount == 0 %}
        <h1>
          <a href="{{pageUri}}" class="w3-bar-item w3-btn w3-center w3-block w3- w3-hover-">
  {% if classIconCssClasses is defined %}
              <i class="{{ classIconCssClasses }} site-menu-icon "></i>
  {% endif %}
            <span class="">events</span>
          </a>
        </h1>
        {{ htmSearchButtonsCompanyEventPage() }}
        <h2>
          <span class="w3-bar-item w3-padding w3-center w3-block w3-">
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no event found</span>
          </span>
        </h2>
{% else %}
  {% if companyEventCount == 1 %}
    {% if id is defined %}
        <h1>
          <a href="{{pageUri}}" class="w3-bar-item w3-btn w3-center w3-block w3- w3-hover-">
      {% if classIconCssClasses is defined %}
              <i class="{{ classIconCssClasses }} site-menu-icon "></i>
      {% endif %}
            <span class="">event</span>
          </a>
        </h1>
        {{ htmSearchButtonsCompanyEventPage() }}
        <h2 class="w3-center ">
          <span class="w3-bar-item w3-padding w3-center w3-block w3-">
            <span class="">{{companyEvent_.objectTitle}}</span>
          </span>
        </h2>
    {% else %}
        {{ htmBodyAllCompanyEventPage() }}
    {% endif %}
  {% else %}
        {{ htmBodyAllCompanyEventPage() }}
  {% endif %}
{% endif %}
        {%- block htmFormCompanyEventPage %}
        <form action="/api/event" id="CompanyEventForm" class="pageForm " style="" onsubmit="event.preventDefault(); return false; ">
{% if pk is defined %}
          <input name="pk" class="valuePk" type="hidden" value="{{pk}}"/>
          {% endif %}
          <input name="focusId" type="hidden"/>
          <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
          <input name="companyEvent" id="companyEvent" class="companyEvent"  value='{{ toJsonObjectStringInApostrophes(companyEvent_) }}' type="hidden"/>
          <input name="listCompanyEvent" id="listCompanyEvent" class="listCompanyEvent"  value='{{ toJsonArrayStringInApostrophes(listCompanyEvent) }}' type="hidden"/>
        </form>
  {% if id is defined %}
        {{ htmButton_searchpageCompanyEvent() }}
        {{ htmForm_searchpageCompanyEvent() }}
  {% endif %}
        {%- endblock htmFormCompanyEventPage %}
        {%- block htmFormsCompanyEventPage %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {% if "PATCH" in scopes %}
      {% if companyEventCount == 1 %}
        <button
            class="w3-btn w3-round w3-border w3-border-black w3-ripple w3-padding w3- "
            id="refreshThisCompanyEventGenPage"
            onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'pk:{{pk}}' } ], {}, this, function() { addGlow(document.querySelector('#refreshThisCompanyEventGenPage')); }, function() { addError(document.querySelector('#refreshThisCompanyEventGenPage')); }); return false; ">
          <i class="fas fa-sync-alt "></i>
          refresh this event
        </button>
      {% endif %}
      {% if companyEventCount > 0 %}
        <div class="">
          <button id="refreshAllCompanyEventGenPage{{id}}" class="w3-btn w3-round w3-border w3-border-black w3-ripple w3-padding w3- "
              onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshAllCompanyEventGenPage{{id}}')); }, function() { addError(document.querySelector('#refreshAllCompanyEventGenPage{{id}}')); }); "
              >
            <i class="fas fa-sync-alt "></i>
            refresh all the events
          </button>
        </div>
      {% endif %}
    {% endif %}
  {% endif %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {% if companyEventCount > 0 %}
        {{ htmButton_patchCompanyEvent() }}
        {{ htmForm_patchCompanyEvent() }}
    {% endif %}
  {% endif %}
  {% if AUTH_SCOPE_ADMIN in scopes %}
    {% if companyEventCount == int1 %}
      {% if id is defined %}
      {% else %}
        {{ htmButton_postCompanyEvent() }}
        {{ htmForm_postCompanyEvent() }}
      {% endif %}
    {% else %}
        {{ htmButton_postCompanyEvent() }}
        {{ htmForm_postCompanyEvent() }}
    {% endif %}
  {% endif %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
        {{ htmButton_putimportCompanyEvent() }}
        {{ htmForm_putimportCompanyEvent() }}
  {% endif %}
        {%- block htmSuggestedCompanyEventPage %}{%- endblock %}
        {%- endblock htmFormsCompanyEventPage %}
      {%- endblock htmBodyMiddleCompanyEventPage %}
      {%- endblock htmBodyMiddleBaseModelPage %}

      {%- block htmBodyEndBaseModelPage %}
      {{ super() }}
      {%- block htmBodyEndCompanyEventPage %}
      {%- endblock htmBodyEndCompanyEventPage %}
      {%- endblock htmBodyEndBaseModelPage %}
{%- block htmSuggestedCompanyEventPage %}
        <div class="w3-cell-row ">
          <div class="w3-cell ">
            <span>
              search events: 
            </span>
          </div>
        </div>
        <div class="w3-bar ">
          <sl-input
              type="text"
              class="suggestCompanyEvent w3-input w3-border w3-bar-item "
              name="suggestCompanyEvent"
              id="suggestCompanyEvent{{id}}"
              autocomplete="off"
              oninput="suggestCompanyEventObjectSuggest( [ { 'name': 'q', 'value': 'objectSuggest:' + this.value }, { 'name': 'rows', 'value': '10' }, { 'name': 'fl', 'value': 'classCanonicalName,pk,pageUrlPk,objectTitle' } ], document.querySelector('#suggestListCompanyEvent{{id}}'), {{pk}}; "
              onkeyup="if (event.keyCode === 13) { event.preventDefault(); window.location.href = '/event?q={{ query1 }}:' + encodeURIComponent(this.value) + '{{fqs}}{{sorts}}&amp;rows={{start2}}&amp;rows={{rows1}}"
  {% if listCompanyEvent is defined %}
              value="{{query2}}"
  {% endif %}
              >
          </sl-input>
          <button
              class="w3-btn w3-round w3-border w3-border-black w3-ripple w3-padding w3-bar-item w3- "
              onclick="window.location.href = '/event?q=&quot;, query1, &quot;:' + encodeURIComponent(this.previousElementSibling.value) + '&quot;, fqs, sorts, &quot;&amp;rows=&quot;, start2, &quot;&amp;rows=&quot;, rows1, &quot;'; "
              >
            <i class="fas fa-search "></i>
          </button>
          <div>
            <div class="w3-cell-row ">
              <div class="w3-cell w3-left-align w3-cell-top ">
                <ul class="w3-ul w3-hoverable " id="suggestListCompanyEvent{{id}}">
                </ul>
              </div>
            </div>
          </div>
          <div class="">
            <a href="/event" class="">
              <i class="fad fa-map-location-dot"></i>
              see all the events
            </a>
          </div>
        </div>
{%- endblock htmSuggestedCompanyEventPage %}

{%- macro inputPkCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_pk">
  {%- endif %}
              <sl-input
                  readonly
                  placeholder="primary key"
                  label="primary key"
                  help-text="
The primary key of this object in the database"
                  id="{{classApiMethodMethod}}_pk"
  {%- if "Page" == classApiMethodMethod %}
                  data-pk="{{ pk }}"
                  class="label-on-left {{classApiMethodMethod}}_pk setPk classCompanyEvent inputCompanyEvent{{pk}}Pk "
                  name="setPk"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_pk setPk classCompanyEvent inputCompanyEvent{{pk}}Pk "
                  name="setPk"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_pk valuePk w3-input w3-border classCompanyEvent inputCompanyEvent{{pk}}Pk "
                  name="pk"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{companyEvent_.pk}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}Pk varCompanyEventPk ">{{companyEvent_.pk}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmPkCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputPkCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputObjectIdCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_objectId">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="ID"
                  label="ID"
                  help-text="
A URL friendly unique ID for this object"
                  id="{{classApiMethodMethod}}_objectId"
  {%- if "Page" == classApiMethodMethod %}
                  data-pk="{{ pk }}"
                  class="label-on-left {{classApiMethodMethod}}_objectId setObjectId classCompanyEvent inputCompanyEvent{{pk}}ObjectId "
                  name="setObjectId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_objectId setObjectId classCompanyEvent inputCompanyEvent{{pk}}ObjectId "
                  name="setObjectId"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_objectId valueObjectId w3-input w3-border classCompanyEvent inputCompanyEvent{{pk}}ObjectId "
                  name="objectId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{companyEvent_.objectId}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}ObjectId varCompanyEventObjectId ">{{companyEvent_.objectId}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmObjectIdCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputObjectIdCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputCreatedCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_created">
  {%- endif %}
              <sl-input
                  type="text"
                  readonly
                  placeholder="created"
                  help-text="A created timestamp for this record in the database"
                  label="created"
                  class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classCompanyEvent inputCompanyEvent{{pk}}Created "
                  placeholder="MM/dd/yyyy h:mm a '['VV']'"
                  data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                  id="{{classApiMethodMethod}}_created"
                  value="{%- if companyEvent_.created is defined %}{{ formatZonedDateTime(companyEvent_.created, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                  >
              </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}Created varCompanyEventCreated ">{{companyEvent_.created}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmCreatedCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputCreatedCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputModifiedCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_modified">
  {%- endif %}
              <sl-input
                  type="text"
                  readonly
                  placeholder="modified"
                  help-text="A modified timestamp for this record in the database"
                  label="modified"
                  class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classCompanyEvent inputCompanyEvent{{pk}}Modified "
                  placeholder="MM/dd/yyyy h:mm a '['VV']'"
                  data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                  id="{{classApiMethodMethod}}_modified"
                  value="{%- if companyEvent_.modified is defined %}{{ formatZonedDateTime(companyEvent_.modified, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                  >
              </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}Modified varCompanyEventModified ">{{companyEvent_.modified}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmModifiedCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputModifiedCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputArchivedCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
              <sl-checkbox
                  id="{{classApiMethodMethod}}_archived"
                  value="true"
  {%- else %}
              <sl-select
                  id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="archived"
                  help-text="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_archived classCompanyEvent inputCompanyEvent{{pk}}Archived "
                  name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_archived classCompanyEvent inputCompanyEvent{{pk}}Archived "
                  name="setArchived"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classCompanyEvent inputCompanyEvent{{pk}}Archived "
                  name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if companyEvent_.archived is defined %}
                  checked="checked"
    {%- endif %}
                  >archived</sl-checkbox>
  {%- else %}
                  >
                <sl-option value="" selected="selected"></sl-option>
                <sl-option value="true">true</sl-option>
                <sl-option value="false">false</sl-option>
              </sl-select>
  {%- endif %}

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}Archived varCompanyEventArchived ">{{companyEvent_.archived}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmArchivedCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputArchivedCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputDeletedCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_deleted">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
              <sl-checkbox
                  id="{{classApiMethodMethod}}_deleted"
                  value="true"
  {%- else %}
              <sl-select
                  id="{{classApiMethodMethod}}_deleted"
  {%- endif %}
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="deleted"
                  help-text="For deleting this record"
  {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_deleted classCompanyEvent inputCompanyEvent{{pk}}Deleted "
                  name="setDeleted"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_deleted classCompanyEvent inputCompanyEvent{{pk}}Deleted "
                  name="setDeleted"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_deleted setDeleted valueDeleted classCompanyEvent inputCompanyEvent{{pk}}Deleted "
                  name="setDeleted"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if companyEvent_.deleted is defined %}
                  checked="checked"
    {%- endif %}
                  >deleted</sl-checkbox>
  {%- else %}
                  >
                <sl-option value="" selected="selected"></sl-option>
                <sl-option value="true">true</sl-option>
                <sl-option value="false">false</sl-option>
              </sl-select>
  {%- endif %}

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}Deleted varCompanyEventDeleted ">{{companyEvent_.deleted}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmDeletedCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputDeletedCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputLocationCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_location">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="map location"
                  label="map location"
                  id="{{classApiMethodMethod}}_location"
  {%- if "Page" == classApiMethodMethod %}
                  data-pk="{{ pk }}"
                  class="label-on-left {{classApiMethodMethod}}_location setLocation classCompanyEvent inputCompanyEvent{{pk}}Location "
                  name="setLocation"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_location setLocation classCompanyEvent inputCompanyEvent{{pk}}Location "
                  name="setLocation"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_location valueLocation w3-input w3-border classCompanyEvent inputCompanyEvent{{pk}}Location "
                  name="location"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{toJsonObjectString companyEvent_.location}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}Location varCompanyEventLocation ">{{companyEvent_.location}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmLocationCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputLocationCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputEventNameCompanyEventPage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_eventName">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="event name"
                  label="event name"
                  help-text="
The event name. "
                  id="{{classApiMethodMethod}}_eventName"
  {%- if "Page" == classApiMethodMethod %}
                  data-pk="{{ pk }}"
                  class="label-on-left {{classApiMethodMethod}}_eventName setEventName classCompanyEvent inputCompanyEvent{{pk}}EventName "
                  name="setEventName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_eventName setEventName classCompanyEvent inputCompanyEvent{{pk}}EventName "
                  name="setEventName"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_eventName valueEventName w3-input w3-border classCompanyEvent inputCompanyEvent{{pk}}EventName "
                  name="eventName"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{companyEvent_.eventName}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
  {%- if userKey in companyEvent_.userKeys %}
            <span class="varCompanyEvent{{pk}}EventName varCompanyEventEventName ">{{companyEvent_.eventName}}</span>
  {%- endif %}
{%- endmacro %}

{%- macro htmEventNameCompanyEventPage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputEventNameCompanyEventPage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}
