{% extends "en-us/BaseResultPage.htm" %}

{%- block htmTitleBaseResultPage %}
{%- block htmTitleSitePagePage %}
    <title>{% if searchListSitePage_ is defined %}{% if sitePageCount == int1 %}{% if id is defined %}article{% else %}article{% endif %}{% else %}no article found{% endif %}{% else %}articles{% endif %}</title>
{%- endblock htmTitleSitePagePage %}
{%- endblock htmTitleBaseResultPage %}

{%- block htmStylesBaseResultPage %}
{{ super() }}
{%- block htmStylesSitePagePage %}
{%- endblock htmStylesSitePagePage %}
{%- endblock htmStylesBaseResultPage %}

{%- block htmStyleBaseResultPage %}
{{ super() }}
{%- block htmStyleSitePagePage %}
{%- endblock htmStyleSitePagePage %}
{%- endblock htmStyleBaseResultPage %}

{%- block htmScriptsBaseResultPage %}
{{ super() }}
{%- block htmScriptsSitePagePage %}
    <script src="{{staticBaseUrl}}/js/enUS/SitePagePage.js"></script>
{%- endblock htmScriptsSitePagePage %}
{%- endblock htmScriptsBaseResultPage %}

{%- block htmScriptBaseResultPage %}
{%- block htmScriptSitePagePage %}
    <script>

      function jsWebsocketSitePage(id, vars, $response) {
        {%- block jsWebsocketSitePagePage %}{%- endblock %}
      }

      function jsTooltipSitePage(e, feature) {
        {%- block jsTooltipSitePagePage %}{%- endblock %}
      }

      function htmTooltipSitePage(feature, layer) {
        return `{%- block htmTooltipSitePagePage %}
<h3><i class="{{ classIconCssClasses }}  "></i><a href="${quoteattr(feature.properties.pageUrlPk)}">${feature.properties.objectTitle}</a></h3>
{%- endblock htmTooltipSitePagePage %}`;
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { lat: {{ DEFAULT_MAP_LOCATION.lat }}, lon: {{ DEFAULT_MAP_LOCATION.lon }} };
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('sl-button')
        , customElements.whenDefined('sl-input')
      ]).then(() => {

        document.onkeydown = function(evt) {
          evt = evt || window.event;
          var isEscape = false;
          if ('key' in evt) {
            isEscape = (evt.key === 'Escape' || evt.key === 'Esc');
          } else {
            isEscape = (evt.keyCode === 27);
          }
          if (isEscape) {
            document.querySelector('.w3-modal:visible').classList.add('display-none');
          }
        };
        window.eventBus = new EventBus('/eventbus');
        var pk = {% if pk is defined %}{{pk}}{% else %}null{% endif %};

        if(pk == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          window.sitePage = JSON.parse(document.querySelector('.pageForm .sitePage')?.value);
        {% if id is defined %}
          // PATCH created
          document.querySelector('#Page_created')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_created');
            const valid = form.checkValidity();
            if(valid) {
              var timeZone = event.currentTarget.value.split('[').pop().split(']')[0];
              var t1 = moment(event.currentTarget.value.split('[')[0].trim(), 'MM/DD/YYYY h:mm a');
              var t2 = moment.tz(event.currentTarget.value.split('[')[0].trim(), 'MM/DD/YYYY h:mm a', timeZone);
              var t3 = new Date(t1._d);
              t3.setTime(t1.toDate().getTime() + t2.toDate().getTime() - t1.toDate().getTime());
              var t = moment(t3);
              if(t) {
                var s = t.tz(timeZone).format('YYYY-MM-DDTHH:mm:ss.000') + '[' + timeZone + ']';
                patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                    , 'setCreated', s
                    , event.currentTarget
                    , function(response, target) { addGlow(target); }
                    , function(response, target) { addError(target); }
                    );
              }
            }
          });
          document.querySelector('#Page_created')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_created')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_created');
            const valid = form.reportValidity();
          });
          // PATCH objectId
          document.querySelector('#Page_objectId')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_objectId');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setObjectId', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_objectId')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_objectId')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_objectId');
            const valid = form.reportValidity();
          });
          // PATCH archived
          document.querySelector('#Page_archived')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_archived');
            const valid = form.checkValidity();
            if(valid) {
              var confirmResponse = confirm('Are you sure you want to archive that?'); 
              if(confirmResponse) { 
                patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                    , 'setArchived', event.currentTarget.checked
                    , event.currentTarget
                    , function(response, target) { addGlow(target); }
                    , function(response, target) { addError(target); }
                    );
              }
            }
          });
          document.querySelector('#Page_archived')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_archived')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_archived');
            const valid = form.reportValidity();
          });
          // PATCH deleted
          document.querySelector('#Page_deleted')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_deleted');
            const valid = form.checkValidity();
            if(valid) {
              var confirmResponse = confirm('Are you sure you want to delete that?'); 
              if(confirmResponse) { 
                patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                    , 'setDeleted', event.currentTarget.checked
                    , event.currentTarget
                    , function(response, target) { addGlow(target); }
                    , function(response, target) { addError(target); }
                    );
              }
            }
          });
          document.querySelector('#Page_deleted')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_deleted')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_deleted');
            const valid = form.reportValidity();
          });
          // PATCH pageId
          document.querySelector('#Page_pageId')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_pageId');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setPageId', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_pageId')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_pageId')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_pageId');
            const valid = form.reportValidity();
          });
          // PATCH uri
          document.querySelector('#Page_uri')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_uri');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setUri', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_uri')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_uri')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_uri');
            const valid = form.reportValidity();
          });
          // PATCH url
          document.querySelector('#Page_url')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_url');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setUrl', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_url')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_url')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_url');
            const valid = form.reportValidity();
          });
          // PATCH author
          document.querySelector('#Page_author')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_author');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setAuthor', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_author')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_author')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_author');
            const valid = form.reportValidity();
          });
          // PATCH pageImageUri
          document.querySelector('#Page_pageImageUri')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_pageImageUri');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setPageImageUri', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_pageImageUri')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_pageImageUri')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_pageImageUri');
            const valid = form.reportValidity();
          });
          // PATCH inheritPk
          document.querySelector('#Page_inheritPk')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_inheritPk');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setInheritPk', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_inheritPk')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_inheritPk')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_inheritPk');
            const valid = form.reportValidity();
          });
          // PATCH sessionId
          document.querySelector('#Page_sessionId')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_sessionId');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setSessionId', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_sessionId')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_sessionId')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_sessionId');
            const valid = form.reportValidity();
          });
          // PATCH userKey
          document.querySelector('#Page_userKey')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_userKey');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setUserKey', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_userKey')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_userKey')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_userKey');
            const valid = form.reportValidity();
          });
          // PATCH id
          document.querySelector('#Page_id')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_id');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setId', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_id')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_id')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_id');
            const valid = form.reportValidity();
          });
          // PATCH courseNum
          document.querySelector('#Page_courseNum')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_courseNum');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setCourseNum', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_courseNum')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_courseNum')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_courseNum');
            const valid = form.reportValidity();
          });
          // PATCH lessonNum
          document.querySelector('#Page_lessonNum')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_lessonNum');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setLessonNum', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_lessonNum')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_lessonNum')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_lessonNum');
            const valid = form.reportValidity();
          });
          // PATCH title
          document.querySelector('#Page_title')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_title');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setTitle', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_title')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_title')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_title');
            const valid = form.reportValidity();
          });
          // PATCH resourceUri
          document.querySelector('#Page_resourceUri')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_resourceUri');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setResourceUri', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_resourceUri')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_resourceUri')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_resourceUri');
            const valid = form.reportValidity();
          });
          // PATCH templateUri
          document.querySelector('#Page_templateUri')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_templateUri');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setTemplateUri', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_templateUri')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_templateUri')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_templateUri');
            const valid = form.reportValidity();
          });
          // PATCH h1
          document.querySelector('#Page_h1')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_h1');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setH1', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_h1')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_h1')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_h1');
            const valid = form.reportValidity();
          });
          // PATCH h2
          document.querySelector('#Page_h2')?.addEventListener('sl-change', (event) => {
            const form = document.querySelector('#PageForm_h2');
            const valid = form.checkValidity();
            if(valid) {
              patchSitePageVal([{ name: 'softCommit', value: 'true' }, { name: 'fq', value: 'id:' + event.currentTarget.getAttribute('data-id') }]
                  , 'setH2', event.currentTarget.value
                  , event.currentTarget
                  , function(response, target) { addGlow(target); }
                  , function(response, target) { addError(target); }
                  );
            }
          });
          document.querySelector('#Page_h2')?.addEventListener('sl-focus', (event) => {
            removeGlow(event.currentTarget);
          });
          document.querySelector('#Page_h2')?.addEventListener('sl-blur', (event) => {
            const form = document.querySelector('#PageForm_h2');
            const valid = form.reportValidity();
          });
        {% endif %}
        }
        window.listSitePage = JSON.parse(document.querySelector('.pageForm .listSitePage')?.value);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphSitePage();

        {%- block websocketSitePagePage %}{%- endblock %}
        document.querySelector('#htmForm_patchSitePage')?.addEventListener('submit', event => {
          event.preventDefault();
          patchSitePage(null, document.querySelector('#htmForm_patchSitePage'));
        });
        document.querySelector('#htmForm_postSitePage')?.addEventListener('submit', event => {
          event.preventDefault();
          postSitePage(document.querySelector('#htmForm_postSitePage'));
        });
        document.querySelector('#htmForm_putimportSitePage')?.addEventListener('submit', event => {
          event.preventDefault();
          putimportSitePage(document.querySelector('#htmForm_putimportSitePage'));
        });
        document.querySelector('#htmForm_searchpageSitePage')?.addEventListener('submit', event => {
          event.preventDefault();
          searchpageSitePage();
        });
      });
    </script>
{%- endblock htmScriptSitePagePage %}
{%- endblock htmScriptBaseResultPage %}

{%- block websocketBaseResultPage %}
{{ super() }}
{%- block websocketSitePagePage %}
        websocketSitePage(websocketSitePageInner);
{%- endblock websocketSitePagePage %}
{%- endblock websocketBaseResultPage %}

{%- block htmUrlSitePagePage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlSitePagePage %}

{%- macro htmButton_patchSitePage() %}
        <sl-button
            onclick="document.querySelector('#patchSitePageDialog').show(); "
            >
          <i class="fas fa-edit "></i>
          Modify article
        </sl-button>
{%- endmacro %}

{%- macro htmFormButton_patchSitePage() %}
            <sl-button type="submit" variant="primary">Modify article</sl-button>
{%- endmacro %}

{%- macro htmForm_patchSitePage() %}
        <sl-dialog id="patchSitePageDialog" label="Modify article">
          <form id="htmForm_patchSitePage">

              {% if "PATCH" in scopes %}
                {{ htmCreatedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmCreatedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmCreatedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmObjectIdSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmObjectIdSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmObjectIdSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmArchivedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmArchivedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmArchivedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmDeletedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmDeletedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmDeletedSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmPageIdSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmPageIdSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPageIdSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmUriSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmUriSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmUriSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmUrlSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmUrlSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmUrlSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmAuthorSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmAuthorSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmAuthorSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmPageImageUriSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmPageImageUriSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPageImageUriSitePagePage(classApiMethodMethod='PATCH', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}
            {{ htmFormButton_patchSitePage() }}
          </form>
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_postSitePage() %}
        <sl-button
            onclick="document.querySelector('#postSitePageDialog').show(); "
            >
          <i class="fas fa-file-plus "></i>
          Create an article
        </sl-button>
{%- endmacro %}

{%- macro htmFormButton_postSitePage() %}
            <sl-button type="submit" variant="primary">Create an article</sl-button>
{%- endmacro %}

{%- macro htmForm_postSitePage() %}
        <sl-dialog id="postSitePageDialog" label="Create an article">
          <form id="htmForm_postSitePage">
            <div class="">You can override any default values below: </div>

              {% if "PATCH" in scopes %}
                {{ htmObjectIdSitePagePage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmObjectIdSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmObjectIdSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmPageIdSitePagePage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmPageIdSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPageIdSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmUriSitePagePage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmUriSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmUriSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmUrlSitePagePage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmUrlSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmUrlSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmAuthorSitePagePage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmAuthorSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmAuthorSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmPageImageUriSitePagePage(classApiMethodMethod='POST', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmPageImageUriSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPageImageUriSitePagePage(classApiMethodMethod='POST', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}
            {{ htmFormButton_postSitePage() }}
          </form>
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_putimportSitePage() %}
        <sl-button
            onclick="document.querySelector('#putimportSitePageDialog').show(); "
            >
          <i class="fas fa-file-import "></i>
          Import articles
        </sl-button>
{%- endmacro %}

{%- macro htmFormButton_putimportSitePage() %}
            <sl-button type="submit" variant="primary">Import articles</sl-button>
{%- endmacro %}

{%- macro htmForm_putimportSitePage() %}
        <sl-dialog id="putimportSitePageDialog" label="Import articles">
          <form id="htmForm_putimportSitePage">
            <div class="w3-cell-row ">
              <sl-textarea
                  class="PUTImport_searchList w3-input w3-border "
                  style="height: 300px; "
                  placeholder="{ 'searchList': [ { 'pk': ... , 'saves': [ ... ] }, ... ] }"
                  >
              </sl-textarea>
            </div>
            {{ htmFormButton_putimportSitePage() }}
          </form>
        </sl-dialog>
{%- endmacro %}

{%- macro htmButton_searchpageSitePage() %}
{%- endmacro %}

{%- macro htmFormButton_searchpageSitePage() %}
            <sl-button type="submit" variant="primary">Search articles</sl-button>
{%- endmacro %}

{%- macro htmForm_searchpageSitePage() %}
        <div id="searchpageSitePageDialog" label="Search articles">
          <sl-details id="htmForm_searchpageSitePage">

              {% if "PATCH" in scopes %}
                {{ htmCreatedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmCreatedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmCreatedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmModifiedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmModifiedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmModifiedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmObjectIdSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmObjectIdSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmObjectIdSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmArchivedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmArchivedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmArchivedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmDeletedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmDeletedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmDeletedSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmPageIdSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmPageIdSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPageIdSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmUriSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmUriSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmUriSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmUrlSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmUrlSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmUrlSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmAuthorSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmAuthorSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmAuthorSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}

              {% if "PATCH" in scopes %}
                {{ htmPageImageUriSitePagePage(classApiMethodMethod='Page', roleForWriteBool=true, roleForReadBool=true) }}
              {% else %}
                {% if "GET" in scopes %}
                  {{ htmPageImageUriSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=true) }}
                {% else %}
                  {{ htmPageImageUriSitePagePage(classApiMethodMethod='Page', roleForWriteBool=false, roleForReadBool=false) }}
                {% endif %}
              {% endif %}
            {{ htmFormButton_searchpageSitePage() }}
          </sl-details>
        </div>
{%- endmacro %}
            {%- macro htmBodyAllSitePagePage() %}
            <h1>
              <sl-button variant="text" size="large" href="{{pageUri}}">
                <i class="fa-duotone fa-solid fa-newspaper"></i>
                <span class="">articles</span>
              </sl-button>
            </h1>
            {{ htmSearchButtonsSitePagePage() }}
            <div id="site-calendar-box">
              <div id="site-calendar"><!-- // --></div>
            </div>
              {{ htmPaginationButtonsSitePagePage() }}
            <div class="grid-mode-details">
            <div>
                <i class="fa-duotone fa-solid fa-newspaper"></i>
              <sl-dropdown>
                <sl-button slot="trigger" caret>title</sl-button>
                <sl-menu>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-a-z"></i>
                    sort by title ascending
                  </sl-menu-item>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-z-a"></i>
                    sort by title descending
                  </sl-menu-item>
                </sl-menu>
              </sl-dropdown>
              <sl-dropdown>
                <sl-button slot="trigger" caret></sl-button>
                <sl-menu>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-a-z"></i>
                    sort by null ascending
                  </sl-menu-item>
                  <sl-menu-item>
                    <i class="fa-solid fa-arrow-down-z-a"></i>
                    sort by null descending
                  </sl-menu-item>
                </sl-menu>
              </sl-dropdown>
              </div>
            </div>
            <div class="grid-mode-details" id="site-results-grid">
              {% for item in listSitePage%}
              <a href="{{ item.pageUrlPk }}">
                <i class="fa-duotone fa-solid fa-newspaper"></i>
                <div>{{ item.title }}</div>
                <div>{{ item.pageUrlId }}</div>
              </a>
              {% endfor %}
                      {% if getColumnTitle is defined %}
                        <div>
                        </div>
                      {% endif %}
                      {% if getColumnPageUrlId is defined %}
                        <div>
                        </div>
                      {% endif %}
            </div>
            {%- endmacro htmBodyAllSitePagePage() %}
{%- macro htmSearchButtonsSitePagePage() %}
        <div id="htmSearchButtons">
          <sl-tooltip placement="top" content="Advanced search for articles">
            <sl-button onclick="document.querySelector('#siteSidebarToggleSearch').show(); ">
              <i slot="prefix" class="fad fa-magnifying-glass hover-box-shadow w3-xlarge "></i> 
              Search
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Filters and facet counts for articles">
            <sl-button onclick="document.querySelector('#siteSidebarToggleFilters').show(); ">
              <i slot="prefix" class="fad fa-filters hover-box-shadow w3-xlarge "></i> 
              Filters
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for articles">
            <sl-button onclick="document.querySelector('#siteSidebarToggleRange').show(); ">
              <i slot="prefix" class="fad fa-calendar-range hover-box-shadow w3-xlarge "></i> 
              Range
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for articles">
            <sl-button onclick="document.querySelector('#siteSidebarTogglePivot').show(); ">
              <i slot="prefix" class="fad fa-table-pivot hover-box-shadow w3-xlarge "></i> 
              Pivot
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for articles">
            <sl-button onclick="document.querySelector('#siteSidebarToggleFieldList').show(); ">
              <i slot="prefix" class="fad fa-list-ul hover-box-shadow w3-xlarge "></i> 
              FieldList
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Advanced search for articles">
            <sl-button onclick="document.querySelector('#siteSidebarToggleStats').show(); ">
              <i slot="prefix" class="fad fa-chart-candlestick hover-box-shadow w3-xlarge "></i> 
              Stats
            </sl-button>
          </sl-tooltip>
          <sl-tooltip placement="top" content="Query the JSON REST API for articles">
            <sl-button onclick="document.querySelector('#siteSidebarToggleApi').show(); "
                 href="{{ apiUri }}{% if pk is defined %}/{{ pk }}{% else %}{% if id is defined %}/{{ id }}{% else %}{{ queryStr }}{% endif %}{% endif %}"
                >
              <i slot="prefix" class="fad fa-brackets-curly hover-box-shadow w3-xlarge "></i> 
              Api
            </sl-button>
          </sl-tooltip>
        </div>
{%- endmacro htmSearchButtonsSitePagePage() %}

{%- macro htmPaginationButtonsSitePagePage() %}
            <div id="htmPaginationButtons">
              <sl-button-group>
                <sl-tooltip placement="top" content="Show the results as details" pill>
                  <sl-button id="grid-toggle-details">
                    <i class="fa-solid fa-list"></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the results as a list">
                  <sl-button id="grid-toggle-list">
                    <i class="fa-solid fa-bars"></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the results as cards" pill>
                  <sl-button id="grid-toggle-card">
                    <i class="fa-solid fa-grid"></i>
                  </sl-button>
                </sl-tooltip>
              </sl-button-group>
              <sl-button-group>
                <sl-tooltip placement="top" content="Show the previous results">
                  <sl-button{% if pagination.pagePrevious is defined %} href="{{pageUri}}?start={{pagination.pagePrevious.start}}&amp;rows={{pagination.rows}}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-arrow-square-left "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show half the results">
                  <sl-button{% if pagination.rowsPrevious >= pagination['1L'] %} href="{{pageUri}}?start={{pagination.start}}&amp;rows={{ pagination.rowsPrevious }}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-minus-square "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show double the results">
                  <sl-button href="{{pageUri}}?start={{pagination.start}}&amp;rows={{ pagination.rowsNext }}">
                    <i slot="prefix" class="fas fa-plus-square "></i>
                  </sl-button>
                </sl-tooltip>
                <sl-tooltip placement="top" content="Show the next results">
                  <sl-button{% if pagination.pageNext is defined %} href="{{pageUri}}?start={{pagination.pageNext.start}}&amp;rows={{pagination.rows}}"{% else %} disabled{% endif %}>
                    <i slot="prefix" class="fas fa-arrow-square-right "></i>
                  </sl-button>
                </sl-tooltip>
              </sl-button-group>
              <div>{{ pagination.startNum }} - {{ pagination.endNum }} of {{ pagination.foundNum }}</div>
            </div>
{%- endmacro htmPaginationButtonsSitePagePage() %}

    {%- block htmBodyStartBaseResultPage %}
    {{ super() }}
    {%- block htmBodyStartSitePagePage %}
    {%- endblock htmBodyStartSitePagePage %}
    {%- endblock htmBodyStartBaseResultPage %}

    {%- block htmBodyMiddleBaseResultPage %}
    {%- block htmBodyMiddleSitePagePage %}
        <div class="htmBodySidebarSitePagePage ">
          {%- block htmBodySidebarSitePagePage %}
          <sl-drawer placement="end" id="siteSidebarToggleSearch">
            <div>
              <span class="w3-bar-item ">
              <i class="fad fa-magnifying-glass "></i> Search</span>
            </div>
            <div class="w3-bar-block ">
{%- block htmBodySearchSitePagePage %}
              <div>
                {% for key, value in varsQ.items() %}
                  <div class="w3-cell-row ">
                    <div class="w3-cell w3-cell-top ">
                      <label for="qSitePage_{{ key }}">{{ displayName }}<sup class="w3-tiny "> ({{ classSimpleName }})</sup></label>
                    </div>
                  </div>
                  <div class="w3-cell-row ">
                    <div class="w3-cell w3-cell-top ">
                      <sl-input id="qSitePage_{{ key }}" placeholder="{{ displayName }}" class="" {% if var == 'objectSuggest' %}onkeyup{% else %}onchange{% endif %}="qChange('SitePage', value); " data-var="{{ var }}" autocomplete="off="></sl-input>
                      <div class="pageSearchVal w3-tiny "></div>
                    </div>
                  </div>
                {% endfor %}
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <label for="qSitePage_Start">start<sup class="w3-tiny "> (Long)</sup></label>
                  </div>
                </div>
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <sl-input id="qSitePage_start" placeholder="{{ displayName }}" class="" onchange="paramChange('SitePage', this); " data-var="start" autocomplete="off=" value="{{ start }}"></sl-input>
                    <div class="pageSearchVal w3-tiny ">start={{ start }}</div>
                  </div>
                </div>
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <label for="qSitePage_Rows">rows<sup class="w3-tiny "> (Long)</sup></label>
                  </div>
                </div>
                <div class="w3-cell-row ">
                  <div class="w3-cell w3-cell-top ">
                    <sl-input id="qSitePage_rows" placeholder="{{ displayName }}" class="" onchange="paramChange('SitePage', this); " data-var="rows" autocomplete="off" value="{{ rows }}"></sl-input>
                    <div class="pageSearchVal w3-tiny ">rows={{ rows }}</div>
                  </div>
                </div>
              </div>
              {%- endblock htmBodySearchSitePagePage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleFilters">
            <div>
              <span class="w3-bar-item ">
              <i class="fad fa-filters "></i> Filters</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyFiltersSitePagePage %}
              <div>
                {% for key, value in varsFq.items() %}
                  <div class="">
                    <label for="fqSitePage_{{ key }}">{{ displayName }}<sup class="w3-tiny "> ({{ classSimpleName }})</sup></label>
                    <div class="w3-cell-row ">
                      <div class="w3-cell w3-cell-top ">
                        <button id="buttonFacetSitePage_{{ key }}" class="" onclick="facetFieldChange('SitePage', value); " title="see values " data-var="{{ var }}" data-clear="{% if facetField is defined %}true{% else %}false{% endif %}"><i class="fas fa-list "></i></button>
                      </div>
                      <div class="w3-cell w3-cell-top ">
                        <sl-input id="fqSitePage_{{ key }}" placeholder="{{ displayName }}" class="" onchange="fqChange('SitePage', value); " data-var="{{ var }}" autocomplete="off=" value="{{ val }}"></sl-input>
                      </div>
                    </div>
                  </div>
                  <div class="w3-tiny ">
                    <div class="pageSearchVal " id="pageSearchVal-fqSitePage_{{ key }}">{% if val is defined %}fq={{ var }}:{{ val | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-buttonFacetSitePage_{{ key }}">{% if facetField.var is defined %}facet.field={{ facetField.var }}{% endif %}</div>
                    <ol class="pageFacetField w3-small pageFacetFieldSitePage_{{ key }} " id="pageFacetFieldSitePage_{{ key }}">
{% for item in facetField.counts %}
                      <li class="cursor-pointer " data-class="SitePage" data-var="{{ item.var }}" data-val="{{ item.key }}" onclick="fqReplace('SitePage', item.value); ">{{ item.key }}: {{ item.value }}</li>
{% endfor %}
                    </ol>
                  </div>
                {% endfor %}
              </div>
              {%- endblock htmBodyFiltersSitePagePage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleRange">
            <div class="w3-bar w3-  ">
              <span class="w3-bar-item ">
              <i class="fad fa-calendar-range "></i> Range</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyRangeSitePagePage %}
              <table class="w3-padding ">
                <tr>
                  <td class="w3-padding w3-tiny " colspan="2">
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeGap-SitePage">{% if rangeGap is defined %}facet.range.gap={{ rangeGap | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeStart-SitePage">{% if rangeStart is defined %}facet.range.start={{ rangeStart | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeEnd-SitePage">{% if rangeEnd is defined %}facet.range.end={{ rangeEnd | urlencode() }}{% endif %}</div>
                    <div class="pageSearchVal " id="pageSearchVal-pageFacetRangeVar-SitePage">{% if defaultRangeVar is defined %}facet.range={!tag=r1}{{ defaultRangeVar | urlencode() }}{% endif %}</div>
                  </td>
                </tr>
              </table>
              <table class="w3-padding ">
                <tr class="">
                  <td class="">
                    <span>Range Gap</span>
                  </td>
                  <td class="">
                    <sl-select name="facet.range.gap" id="pageFacetRangeGap-SitePage" onchange="facetRangeGapChange('SitePage', this); ">
                      <sl-option value="+1YEAR"{% if defaultRangeGap == '+1YEAR' %} selected="selected"{% else %}{% endif %}>Year</sl-option>
                      <sl-option value="+1MONTH"{% if defaultRangeGap == '+1MONTH' %} selected="selected"{% else %}{% endif %}>Month</sl-option>
                      <sl-option value="+1WEEK"{% if defaultRangeGap == '+1WEEK' %} selected="selected"{% else %}{% endif %}>Week</sl-option>
                      <sl-option value="+1DAY"{% if defaultRangeGap == '+1DAY' %} selected="selected"{% else %}{% if defaultRangeGap is defined %}{% else %} selected="selected"{% endif %}{% endif %}>Day</sl-option>
                      <sl-option value="+1HOUR"{% if defaultRangeGap == '+1HOUR' %} selected="selected"{% else %}{% endif %}>Hour</sl-option>
                      <sl-option value="+1MINUTE"{% if defaultRangeGap == '+1MINUTE' %} selected="selected"{% else %}{% endif %}>Minute</sl-option>
                      <sl-option value="+1SECOND"{% if defaultRangeGap == '+1SECOND' %} selected="selected"{% else %}{% endif %}>Second</sl-option>
                    </sl-select>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span>Range Start</span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span><sl-input type="datetime-local" name="facetRangeStart" id="pageFacetRangeStart-SitePage" value="{{ formatZonedDateTime(defaultRangeStart, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) }}" onclick="facetRangeStartChange('SitePage', this); "></sl-input></span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span>Range End</span>
                  </td>
                </tr>
                <tr class="">
                  <td class="" colspan="2">
                    <span><sl-input type="datetime-local" name="facetRangeEnd" id="pageFacetRangeEnd-SitePage" value="{{ formatZonedDateTime(defaultRangeEnd, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) }}" onclick="facetRangeEndChange('SitePage', this); "></sl-input></span>
                  </td>
                </tr>
              </table>
              <table class="w3-padding ">
                {% for key, value in varsRange.items() %}
                  <tr class="">
                    <td class="">
                      <span><sl-radio-group name="pageFacetRange" class="pageFacetRange " id="pageFacetRangeSitePage_{{ key }}" value="{{ var }}"{% if defaultRangeVar == var %} checked="checked"{% endif %} onclick="facetRangeChange('SitePage', value); "></sl-radio-group></span>
                    </td>
                    <td class="">
                      <label for="pageFacetRangeSitePage_{{ key }}">{{ displayName }}</label>
                    </td>
                  </tr>
                {% endfor %}
              </table>
              {%- endblock htmBodyRangeSitePagePage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarTogglePivot">
            <div>
              <span class="w3-bar-item ">
              <i class="fad fa-table-pivot "></i> Pivot</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyPivotSitePagePage %}
              <div style="display: none; " class="w3-padding w3-tiny " id="pageSearchVal-PivotSitePageHidden">
                {% for item in defaultPivotVars %}
                  <div class="pageSearchVal-PivotSitePageHidden " id="pageSearchVal-PivotSitePageHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div class="w3-padding w3-tiny " id="pageSearchVal-PivotSitePage">
                {% if defaultPivotVars is defined %}
                  <div class="pageSearchVal pageSearchVal-PivotSitePage " id="pageSearchVal-PivotSitePage_1">facet.pivot={!range=r1}{% for item in defaultPivotVars %}{% if loop.index > 0 %},{% endif %}{{ item }}{% endfor %}</div>
                {% endif %}
              </div>
              <table class="w3-table ">
                {% for key, value in varsFq.items() %}
                  <tr class="">
                    <td class="">
                      <span><sl-checkbox name="pageFacetPivot" class="pageFacetPivot " id="pageFacetPivotSitePage_{{ key }}" value="{{ var }}"{% if pivot is defined %} checked="checked"{% endif %} onclick="facetPivotChange('SitePage', value); ">{{ displayName }}</sl-checkbox></span>
                    </td>
                    <td class="w3-cell ">
                      <label for="pageFacetPivotSitePage_{{ key }}">{{ displayName }}</label>
                    </td>
                  </tr>
                {% endfor %}
              </table>
              {%- endblock htmBodyPivotSitePagePage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleFieldList">
            <div>
              <span class="w3-bar-item ">
              <i class="fad fa-list-ul "></i> Field List</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyFieldListSitePagePage %}
              <div
 style="display: none; " class="w3-padding w3-tiny " id="pageSearchVal-FieldListSitePageHidden">
                {% for item in defaultFieldListVars %}
                  <div class="pageSearchVal-FieldListSitePageHidden " id="pageSearchVal-FieldListSitePageHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div class="w3-padding w3-tiny " id="pageSearchVal-FieldListSitePage">
                {% if defaultFieldListVars is defined %}
                  <div class="pageSearchVal pageSearchVal-FieldListSitePage " id="pageSearchVal-FieldListSitePage_1">fl={% for item in defaultFieldListVars %}{% if loop.index > 0 %},{% endif %}{{ this }}{% endfor %}</div>
                {% endif %}
              </div>
              <table class="w3-table ">
                {% for key, value in varsFq.items() %}
                  <tr class="">
                    <td class="">
                      <span><sl-checkbox name="pageFieldList" class="pageFieldList " id="pageFieldListSitePage_{{ key }}" value="{{ var }}"{% if fieldList is defined %} checked="checked"{% endif %} onclick="facetFieldListChange('SitePage', value); ">{{ displayName }}</sl-checkbox></span>
                    </td>
                    <td class="w3-cell ">
                      <label for="pageFieldListSitePage_{{ key }}">{{ displayName }}</label>
                    </td>
                  </tr>
                {% endfor %}
              </table>
              {%- endblock htmBodyFieldListSitePagePage %}
            </div>
          </sl-drawer>
          <sl-drawer placement="end" id="siteSidebarToggleStats">
            <div>
              <span class="w3-bar-item ">
                <i class="fad fa-chart-candlestick "></i>                 Stats</span>
            </div>
            <div class="w3-bar-block ">
              {%- block htmBodyStatsSitePagePage %}
              <div
 style="display: none; " class="w3-padding w3-tiny " id="pageSearchVal-StatsSitePageHidden">
                {% for item in defaultStatsVars %}
                  <div class="pageSearchVal-StatsSitePageHidden " id="pageSearchVal-StatsSitePageHidden_{{ item }}">{{ item }}</div>
                {% endfor %}
              </div>
              <div class="w3-padding w3-tiny " id="pageSearchVal-StatsSitePage">
                {% if defaultStatsVars is defined %}
                  {% for item in defaultStatsVars %}
                    <div class="pageSearchVal pageSearchVal-StatsSitePage_{{ item }} " id="pageSearchVal-StatsSitePage_{{ item }}">stats.field={{ item }}                    </div>
                  {% endfor %}
                {% endif %}
              </div>
              <table class="w3-table ">
                {% for key, value in varsFq.items() %}
                  {% if enableStats is defined %}
                    <tr class="">
                      <td class="">
                        <span><sl-checkbox name="pageStats" class="pageStats " id="pageStatsSitePage_{{ key }}" value="{{ var }}"{% if value.stats is defined %} checked="checked"{% endif %} onclick="facetStatsChange('SitePage', value); ">{{ displayName }}</sl-checkbox></span>
                      </td>
                      <td class="w3-cell ">
                        <div>
                          <label for="pageStatsSitePage_{{ key }}">{{ displayName }}</label>
                        </div>
                        <div class="pageStatsField w3-small pageStatsFieldSitePage_{{ key }} " id="pageStatsFieldSitePage_{{ key }}">
                          {% if value.stats is defined %}
                            {% for item in value.stats %}
                              {% if item.key == 'name' %}{% else %}
                                <div data-class="SitePage" data-var="{{ item.var }}" data-val="{{ item.key }}">{{ item.key }}: {{ item }}</div>
                              {% endif %}
                            {% endfor %}
                            {% if value.stats.max is defined %}
                              <div>
                                <span> step </span>
                                <sl-input id="animateStatsStep" placeholder="step" value="1" style="width: 4em; "></sl-input>
                                <span> min </span>
                                <sl-input id="animateStatsMin" placeholder="min" value="{{ value.stats.min }}" style="width: 4em; "></sl-input>
                                <span> max </span>
                                <sl-input id="animateStatsMax" placeholder="max" value="{{ value.stats.max }}" style="width: 4em; "></sl-input>
                                <span> speed in seconds </span>
                                <sl-input id="animateStatsSpeed" placeholder="speed" value="1" style="width: 4em; "></sl-input>
                                <button onclick="animateStats(); ">animate</button>
                              </div>
                            {% endif %}
                          {% endif %}
                        </div>
                      </td>
                    </tr>
                  {% endif %}
                {% endfor %}
              </table>
            {%- endblock htmBodyStatsSitePagePage %}
            </div>
          </sl-drawer>
          {%- endblock htmBodySidebarSitePagePage %}
        </div>

        {%- block htmBodyGraphLocationSitePagePage %}
        <div id="htmBodyGraphLocationSitePagePage" class="w3-content htmBodyGraphLocation "></div>
        {%- endblock htmBodyGraphLocationSitePagePage %}

        {%- block htmBodyGraphSitePagePage %}
        <div id="htmBodyGraphBaseResultPage" class="w3-content htmBodyGraph "></div>
        {%- endblock htmBodyGraphSitePagePage %}
        <div class="pageContent ">
          <div id="site-calendar-box">
            <div id="site-calendar"><!-- // --></div>
          </div>
        </div>
{% if sitePageCount == 0 %}
        <h1>
          <sl-button variant="text" size="large" href="{{pageUri}}">
            <i class="fa-duotone fa-solid fa-newspaper"></i>
            <span class="">articles</span>
          </sl-button>
        </h1>
        {{ htmSearchButtonsSitePagePage() }}
        <h2>
          <span class="w3-bar-item w3-padding w3-center w3-block w3-">
  {% if classIconCssClasses is defined %}
            <i class="{{ classIconCssClasses }}  site-menu-icon "></i>
  {% endif %}
            <span class="">no article found</span>
          </span>
        </h2>
{% else %}
  {% if sitePageCount == 1 %}
    {% if id is defined %}
        <h1>
          <sl-button variant="text" size="large" href="{{pageUri}}">
            <i class="fa-duotone fa-solid fa-newspaper"></i>
            <span class="">article</span>
          </sl-button>
        </h1>
        {{ htmSearchButtonsSitePagePage() }}
        <h2 class="w3-center ">
          <span class="w3-bar-item w3-padding w3-center w3-block w3-">
            <span class="">{{sitePage_.objectTitle}}</span>
          </span>
        </h2>
    {% else %}
        {{ htmBodyAllSitePagePage() }}
    {% endif %}
  {% else %}
        {{ htmBodyAllSitePagePage() }}
  {% endif %}
{% endif %}
        {%- block htmFormSitePagePage %}
        <form action="/api/page" id="SitePageForm" class="pageForm " style="" onsubmit="event.preventDefault(); return false; ">
{% if id is defined %}
          <input name="id" class="valueId" type="hidden" value="{{id}}"/>
          {% endif %}
          <input name="focusId" type="hidden"/>
          <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
          <input name="sitePage" id="sitePage" class="sitePage"  value='{{ toJsonObjectStringInApostrophes(sitePage_) }}' type="hidden"/>
          <input name="listSitePage" id="listSitePage" class="listSitePage"  value='{{ toJsonArrayStringInApostrophes(listSitePage) }}' type="hidden"/>
        </form>
  {% if id is defined %}
        {{ htmButton_searchpageSitePage() }}
        {{ htmForm_searchpageSitePage() }}
  {% endif %}
        {%- endblock htmFormSitePagePage %}
        {%- block htmFormsSitePagePage %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {% if "PATCH" in scopes %}
      {% if sitePageCount == 1 %}
        <button
            class="w3-btn w3-round w3-border w3-border-black w3-ripple w3-padding w3- "
            id="refreshThisSitePageGenPage"
            onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'id:{{id}}' } ], {}, this, function() { addGlow(document.querySelector('#refreshThisSitePageGenPage')); }, function() { addError(document.querySelector('#refreshThisSitePageGenPage')); }); return false; ">
          <i class="fas fa-sync-alt "></i>
          refresh this article
        </button>
      {% endif %}
      {% if sitePageCount > 0 %}
        <div class="">
          <button id="refreshAllSitePageGenPage{{id}}" class="w3-btn w3-round w3-border w3-border-black w3-ripple w3-padding w3- "
              onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshAllSitePageGenPage{{id}}')); }, function() { addError(document.querySelector('#refreshAllSitePageGenPage{{id}}')); }); "
              >
            <i class="fas fa-sync-alt "></i>
            refresh all the articles
          </button>
        </div>
      {% endif %}
    {% endif %}
  {% endif %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {% if sitePageCount > 0 %}
        {{ htmButton_patchSitePage() }}
        {{ htmForm_patchSitePage() }}
    {% endif %}
  {% endif %}
  {% if AUTH_SCOPE_ADMIN in scopes %}
    {% if sitePageCount == int1 %}
      {% if id is defined %}
      {% else %}
        {{ htmButton_postSitePage() }}
        {{ htmForm_postSitePage() }}
      {% endif %}
    {% else %}
        {{ htmButton_postSitePage() }}
        {{ htmForm_postSitePage() }}
    {% endif %}
  {% endif %}
  {% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
        {{ htmButton_putimportSitePage() }}
        {{ htmForm_putimportSitePage() }}
  {% endif %}
        {%- endblock htmFormsSitePagePage %}
      {%- endblock htmBodyMiddleSitePagePage %}
      {%- endblock htmBodyMiddleBaseResultPage %}

      {%- block htmBodyEndBaseResultPage %}
      {{ super() }}
      {%- block htmBodyEndSitePagePage %}
      {%- endblock htmBodyEndSitePagePage %}
      {%- endblock htmBodyEndBaseResultPage %}
{%- block htmSuggestedSitePagePage %}
        <div class="w3-cell-row ">
          <div class="w3-cell ">
            <span>
              search articles: 
            </span>
          </div>
        </div>
        <div class="w3-bar ">
          <sl-input
              type="text"
              class="suggestSitePage w3-input w3-border w3-bar-item "
              name="suggestSitePage"
              id="suggestSitePage{{id}}"
              autocomplete="off"
              oninput="suggestSitePageObjectSuggest( [ { 'name': 'q', 'value': 'objectSuggest:' + this.value }, { 'name': 'rows', 'value': '10' }, { 'name': 'fl', 'value': 'classCanonicalName,,pageUrlPk,objectTitle' } ], document.querySelector('#suggestListSitePage{{id}}'), {{id}}; "
              onkeyup="if (event.keyCode === 13) { event.preventDefault(); window.location.href = '/page?q={{ query1 }}:' + encodeURIComponent(this.value) + '{{fqs}}{{sorts}}&amp;rows={{start2}}&amp;rows={{rows1}}"
  {% if listSitePage is defined %}
              value="{{query2}}"
  {% endif %}
              >
          </sl-input>
          <button
              class="w3-btn w3-round w3-border w3-border-black w3-ripple w3-padding w3-bar-item w3- "
              onclick="window.location.href = '/page?q=&quot;, query1, &quot;:' + encodeURIComponent(this.previousElementSibling.value) + '&quot;, fqs, sorts, &quot;&amp;rows=&quot;, start2, &quot;&amp;rows=&quot;, rows1, &quot;'; "
              >
            <i class="fas fa-search "></i>
          </button>
          <div>
            <div class="w3-cell-row ">
              <div class="w3-cell w3-left-align w3-cell-top ">
                <ul class="w3-ul w3-hoverable " id="suggestListSitePage{{id}}">
                </ul>
              </div>
            </div>
          </div>
          <div class="">
            <a href="/page" class="">
              <i class="fa-duotone fa-solid fa-newspaper"></i>
              see all the articles
            </a>
          </div>
        </div>
{%- endblock htmSuggestedSitePagePage %}

{%- macro inputCreatedSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_created">
  {%- endif %}
              <sl-input
                  type="text"
                  readonly
                  placeholder="created"
                  help-text="A created timestamp for this record in the database"
                  label="created"
                  class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classSitePage inputSitePage{{id}}Created "
                  placeholder="MM/dd/yyyy h:mm a '['VV']'"
                  data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                  id="{{classApiMethodMethod}}_created"
                  value="{%- if sitePage_.created is defined %}{{ formatZonedDateTime(sitePage_.created, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                  >
              </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Created varSitePageCreated ">{{sitePage_.created}}</span>
{%- endmacro %}

{%- macro htmCreatedSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputCreatedSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputModifiedSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_modified">
  {%- endif %}
              <sl-input
                  type="text"
                  readonly
                  placeholder="modified"
                  help-text="A modified timestamp for this record in the database"
                  label="modified"
                  class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classSitePage inputSitePage{{id}}Modified "
                  placeholder="MM/dd/yyyy h:mm a '['VV']'"
                  data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                  id="{{classApiMethodMethod}}_modified"
                  value="{%- if sitePage_.modified is defined %}{{ formatZonedDateTime(sitePage_.modified, "MM/dd/yyyy h:mm a '['VV']'", defaultLocaleId, defaultZoneId) }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                  >
              </sl-input>
  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Modified varSitePageModified ">{{sitePage_.modified}}</span>
{%- endmacro %}

{%- macro htmModifiedSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputModifiedSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputObjectIdSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_objectId">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="ID"
                  label="ID"
                  help-text="
A URL friendly unique ID for this object"
                  id="{{classApiMethodMethod}}_objectId"
  {%- if "Page" == classApiMethodMethod %}
                  data-id="{{ id }}"
                  class="label-on-left {{classApiMethodMethod}}_objectId setObjectId classSitePage inputSitePage{{id}}ObjectId "
                  name="setObjectId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_objectId setObjectId classSitePage inputSitePage{{id}}ObjectId "
                  name="setObjectId"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_objectId valueObjectId w3-input w3-border classSitePage inputSitePage{{id}}ObjectId "
                  name="objectId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{sitePage_.objectId}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}ObjectId varSitePageObjectId ">{{sitePage_.objectId}}</span>
{%- endmacro %}

{%- macro htmObjectIdSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputObjectIdSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputArchivedSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
              <sl-checkbox
                  id="{{classApiMethodMethod}}_archived"
                  value="true"
  {%- else %}
              <sl-select
                  id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="archived"
                  help-text="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_archived classSitePage inputSitePage{{id}}Archived "
                  name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_archived classSitePage inputSitePage{{id}}Archived "
                  name="setArchived"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classSitePage inputSitePage{{id}}Archived "
                  name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if sitePage_.archived is defined %}
                  checked="checked"
    {%- endif %}
                  >archived</sl-checkbox>
  {%- else %}
                  >
                <sl-option value="" selected="selected"></sl-option>
                <sl-option value="true">true</sl-option>
                <sl-option value="false">false</sl-option>
              </sl-select>
  {%- endif %}

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Archived varSitePageArchived ">{{sitePage_.archived}}</span>
{%- endmacro %}

{%- macro htmArchivedSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputArchivedSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputDeletedSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_deleted">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
              <sl-checkbox
                  id="{{classApiMethodMethod}}_deleted"
                  value="true"
  {%- else %}
              <sl-select
                  id="{{classApiMethodMethod}}_deleted"
  {%- endif %}
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="deleted"
                  help-text="For deleting this record"
  {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_deleted classSitePage inputSitePage{{id}}Deleted "
                  name="setDeleted"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_deleted classSitePage inputSitePage{{id}}Deleted "
                  name="setDeleted"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_deleted setDeleted valueDeleted classSitePage inputSitePage{{id}}Deleted "
                  name="setDeleted"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if sitePage_.deleted is defined %}
                  checked="checked"
    {%- endif %}
                  >deleted</sl-checkbox>
  {%- else %}
                  >
                <sl-option value="" selected="selected"></sl-option>
                <sl-option value="true">true</sl-option>
                <sl-option value="false">false</sl-option>
              </sl-select>
  {%- endif %}

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Deleted varSitePageDeleted ">{{sitePage_.deleted}}</span>
{%- endmacro %}

{%- macro htmDeletedSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputDeletedSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputPageIdSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_pageId">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="Page ID"
                  label="Page ID"
                  help-text="
The ID for this page. "
                  id="{{classApiMethodMethod}}_pageId"
  {%- if "Page" == classApiMethodMethod %}
                  data-id="{{ id }}"
                  class="label-on-left {{classApiMethodMethod}}_pageId setPageId classSitePage inputSitePage{{id}}PageId "
                  name="setPageId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_pageId setPageId classSitePage inputSitePage{{id}}PageId "
                  name="setPageId"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_pageId valuePageId w3-input w3-border classSitePage inputSitePage{{id}}PageId "
                  name="pageId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{sitePage_.pageId}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}PageId varSitePagePageId ">{{sitePage_.pageId}}</span>
{%- endmacro %}

{%- macro htmPageIdSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputPageIdSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputUriSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_uri">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="URI"
                  label="URI"
                  help-text="
The relative URI for this page. "
                  id="{{classApiMethodMethod}}_uri"
  {%- if "Page" == classApiMethodMethod %}
                  data-id="{{ id }}"
                  class="label-on-left {{classApiMethodMethod}}_uri setUri classSitePage inputSitePage{{id}}Uri "
                  name="setUri"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_uri setUri classSitePage inputSitePage{{id}}Uri "
                  name="setUri"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_uri valueUri w3-input w3-border classSitePage inputSitePage{{id}}Uri "
                  name="uri"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{sitePage_.uri}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Uri varSitePageUri ">{{sitePage_.uri}}</span>
{%- endmacro %}

{%- macro htmUriSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputUriSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputUrlSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_url">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="URL"
                  label="URL"
                  help-text="
The URL for this page. "
                  id="{{classApiMethodMethod}}_url"
  {%- if "Page" == classApiMethodMethod %}
                  data-id="{{ id }}"
                  class="label-on-left {{classApiMethodMethod}}_url setUrl classSitePage inputSitePage{{id}}Url "
                  name="setUrl"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_url setUrl classSitePage inputSitePage{{id}}Url "
                  name="setUrl"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_url valueUrl w3-input w3-border classSitePage inputSitePage{{id}}Url "
                  name="url"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{sitePage_.url}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Url varSitePageUrl ">{{sitePage_.url}}</span>
{%- endmacro %}

{%- macro htmUrlSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputUrlSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputAuthorSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_author">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="author"
                  label="author"
                  help-text="
The author"
                  id="{{classApiMethodMethod}}_author"
  {%- if "Page" == classApiMethodMethod %}
                  data-id="{{ id }}"
                  class="label-on-left {{classApiMethodMethod}}_author setAuthor classSitePage inputSitePage{{id}}Author "
                  name="setAuthor"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_author setAuthor classSitePage inputSitePage{{id}}Author "
                  name="setAuthor"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_author valueAuthor w3-input w3-border classSitePage inputSitePage{{id}}Author "
                  name="author"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{sitePage_.author}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}Author varSitePageAuthor ">{{sitePage_.author}}</span>
{%- endmacro %}

{%- macro htmAuthorSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputAuthorSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}

{%- macro inputPageImageUriSitePagePage(classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
            <form id="PageForm_pageImageUri">
  {%- endif %}
              <sl-input
                  {% if roleForWriteBool == true %}clearable{% else %}readonly{% endif %}
                  placeholder="imageUri"
                  label="imageUri"
                  help-text="
The page image URI"
                  id="{{classApiMethodMethod}}_pageImageUri"
  {%- if "Page" == classApiMethodMethod %}
                  data-id="{{ id }}"
                  class="label-on-left {{classApiMethodMethod}}_pageImageUri setPageImageUri classSitePage inputSitePage{{id}}PageImageUri "
                  name="setPageImageUri"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                  class="label-on-left {{classApiMethodMethod}}_pageImageUri setPageImageUri classSitePage inputSitePage{{id}}PageImageUri "
                  name="setPageImageUri"
    {%- else %}
                  class="label-on-left {{classApiMethodMethod}}_pageImageUri valuePageImageUri w3-input w3-border classSitePage inputSitePage{{id}}PageImageUri "
                  name="pageImageUri"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                  value="{{sitePage_.pageImageUri}}"
  {%- endif %}
                  ></sl-input>

  {%- if 'Page' == classApiMethodMethod %}
            </form>
  {%- endif %}
            <span class="varSitePage{{id}}PageImageUri varSitePagePageImageUri ">{{sitePage_.pageImageUri}}</span>
{%- endmacro %}

{%- macro htmPageImageUriSitePagePage(classApiMethodMethod, roleForWriteBool=false, roleForReadBool=false) %}
                            {{ inputPageImageUriSitePagePage(classApiMethodMethod=classApiMethodMethod, roleForWrite=roleForWrite, roleForRead=roleForRead) }}
{%- endmacro %}
